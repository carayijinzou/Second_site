<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cross Validation | Cara (Yijin) Zou</title>
    <link>/tag/cross-validation/</link>
      <atom:link href="/tag/cross-validation/index.xml" rel="self" type="application/rss+xml" />
    <description>Cross Validation</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Fri, 08 May 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>Cross Validation</title>
      <link>/tag/cross-validation/</link>
    </image>
    
    <item>
      <title>PAX9 Variants Random Forest Model</title>
      <link>/project/pax9_rf/</link>
      <pubDate>Fri, 08 May 2020 00:00:00 +0000</pubDate>
      <guid>/project/pax9_rf/</guid>
      <description>


&lt;div id=&#34;predicting-the-effect-of-pax9-variants-using-a-random-forest-model&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Predicting the Effect of PAX9 variants using a Random Forest Model&lt;/h2&gt;
&lt;div id=&#34;abstract&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Abstract&lt;/h3&gt;
&lt;p&gt;Pax9 is a gene belonging to the family of paired-box genes that encode transcription factors involved in organogenesis. Defects in Pax9 can lead to various types of cancer as well as a condition known as oligodontia which causes missing teeth in individuals. A random forest model was used to predict the phenotypic effect of variants of PAX9. Features that were used include: location of mutation, type of mutation, CADD score, protein change (BLOSUM80 score), and in-frame/out of frame mutation. A 10-fold cross validation was conducted to ensure that the model was not overfitting. The resulting random forest model had an 84.0% prediction accuracy, in which the sensitivity was 89.5%, the specificity was 90.9%, and the precision was 89.5%. However, due to the small size of the available data there are many limitations to the model and involving other features such as other gene interactions would be a major direction of future research on the PAX9 gene.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;introductionbackground&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Introduction/Background&lt;/h3&gt;
&lt;p&gt;The PAX9 gene belongs to the family of paired box genes (PAX), which are highly conserved across species. It is located on chromosome 14 and codes for a transcription factor which plays a key role in fetal development. Mutations in the PAX9 gene can lead to different types of cancers (especially lung cancer) as well as oligodontia, a congenital defect of more than 6 missing teeth, especially the molars.The members of the PAX gene family usually consist of a paired-type homeodomain, an octapeptide and a paired box domain. The paired box domain is responsible for binding to DNA to facilitate transcription and is one of our major interests to examine whether a mutation in the gene encoding this structure can be an indication of potential cancer or tooth agenesis phenotype. There are five exons that make up the gene transcript for PAX9. The two most important exons for our project include exon 2 (37130902-37131298), which contains four nucleotides including the start codon, as well as exon 3 (37132102-37132728) which contains the majority of the paired box domain.&lt;/p&gt;
&lt;p&gt;The features used by the random forest model includes: location of mutation, type of mutation, CADD score, protein change (BLOSUM80 score), and in-frame/out of frame mutation. The location of the mutation was important because preliminary analysis using a chi-squared test determined that the location of the mutation (in the paired box region or not) is not independent to whether an individual exhibits oligodontia. Additionally, many of the features were chosen based on known biological information of genes/proteins. Type of mutation and in frame/out of frame mutation were chosen because synonymous mutations are likely to have little deleterious effect while missense and nonsense mutations are likely to cause a more significant effect on the gene product. Insertions and deletions are likely to cause the most effect on the gene since this can cause a frameshift and thus affect all subsequent amino acids. The effect of the protein change was quantified using a higher valued BLOSUM (BLOSUM80) which is used for closely related sequences as some amino acid changes are more detrimental than others. Finally, CADD score was used as it has a similar objective to our model (predicting the effect of variants) and including other similar models will hopefully improve the ability of our model.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;objective&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Objective&lt;/h3&gt;
&lt;p&gt;Utilizing a random forest to classify whether a PAX9 gene variant is pathogenic with the gene data from ClinVar, cBioPortal and gnomAD.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;data-sources&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Data Sources&lt;/h3&gt;
&lt;p&gt;The pathogenic variants were found using cBioPortal (&lt;a href=&#34;https://www.cbioportal.org/&#34; class=&#34;uri&#34;&gt;https://www.cbioportal.org/&lt;/a&gt;) which contained known variants that cause cancer. Pathogenic variants were also identified from the ClinVar database (&lt;a href=&#34;https://www.ncbi.nlm.nih.gov/clinvar/&#34; class=&#34;uri&#34;&gt;https://www.ncbi.nlm.nih.gov/clinvar/&lt;/a&gt;) which consists of variants and their corresponding phenotype/condition. ClinVar largely contained variants that resulted in tooth agenesis. If the clinical significance was labelled as “benign” or “likely benign”, they were excluded from the positive variants dataset. It must be noted that there is a risk using ClinVar since there are more lenient standards for submitting data onto the database.&lt;/p&gt;
&lt;p&gt;The negative variants were extracted from gnomAD (&lt;a href=&#34;https://gnomad.broadinstitute.org/&#34; class=&#34;uri&#34;&gt;https://gnomad.broadinstitute.org/&lt;/a&gt;) which is an aggregation of genome sequencing data. Although variants from individuals that are affected by severe pediatric disease as well as their first degree relatives were removed, there may still be some individuals affected by severe disease still included. Therefore, this is not a true reference set of alleles. To remove some known disease variants, any overlap between gnomAD and the pathogenic variants were removed from the gnomAD dataset provided that the allele frequency was less than 0.05.&lt;/p&gt;
&lt;p&gt;All variants were relative to the GRCh37 reference genome (NG_013357.1).
### Computational Methods
Various R packages were used including ‘tidyverse’ and ‘ggplot2’ for manipulating the data as well as ‘peptider’ which contained the BLOSUM80 matrix. The ‘randomForest’ package provided the model for machine learning.&lt;/p&gt;
&lt;p&gt;The Ensembl Variant Effect Predictor (VEP) was used to obtain the protein consequence for the ClinVar data while the other two datasets already included protein consequence. A VCF file was produced using the results of VEP and was used to obtain the PHRED score from Combined Annotation Dependent Depletion (&lt;a href=&#34;https://cadd.gs.washington.edu/&#34; class=&#34;uri&#34;&gt;https://cadd.gs.washington.edu/&lt;/a&gt;) which predicts the deleteriousness of a single nucleotide change as well as insertions and deletions.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;results&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Results&lt;/h3&gt;
&lt;div id=&#34;variant-selection&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;Variant Selection&lt;/h5&gt;
&lt;p&gt;Since there are a lot more variants from gnomAD that are neutral phenotype compared to the number of pathogenic variants, an unbalanced data would form if all of the datasets were included. To combat this, we sampled an equal number of variants that are diseased/not diseased each time we trained our model. Additionally, we used the ten-fold cross validation to make sure that the data is not overfit.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;features&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;Features&lt;/h5&gt;
&lt;p&gt;Allele frequency was originally a feature, however, ClinVar did not contain allele frequency and any attempts at obtaining allele frequency using the Ensembl allele frequency calculator were not successful because it only retrieves information for variants identified from the 1000 Genomes Project. While the cBioPortal dataset did have allele frequency, this was the frequency of a cancerous cell with the PAX9 variant out of all the biopsy samples which was not directly comparable to the gnomAD allele frequency value which is in reference to the entire population. Therefore, this feature was removed.&lt;/p&gt;
&lt;div id=&#34;gene-location&#34; class=&#34;section level6&#34;&gt;
&lt;h6&gt;Gene Location&lt;/h6&gt;
&lt;p&gt;The feature ‘gene location’ was derived from all the variant positions (only using the starting position for convenience) on the chromosome in reference to the human genome GRCh37. The classification of position was built up according to the UCSC genome browser with reference sequence NM_006194. Additionally, we enriched the classification result via the usage of the NCBI analysis on NM_006194.3 since USCS genome browser only provided the exon position. As a result, categories in this feature include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;5’ UTR (37126773-37,131,294) (covering all the exon 1 and majority of exon 2)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Start codon region (37131295-37131298) (at the very end of exon 2)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Exon 3 (37132102-37132728) (contain PAI, RED and KDM5B)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PAI (37132116-37132286)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;RED (37132341-37132487)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;KDM5B (37132599-37132664)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Exon 4 (37135667-37135806)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Exon 5 (37145403-37145657)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3’ UTR (37,145,658-37147011)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Intron (parts outside of the above regions)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;paired-box-region&#34; class=&#34;section level6&#34;&gt;
&lt;h6&gt;Paired box region&lt;/h6&gt;
&lt;p&gt;The PAI stands for paired-box region, which encodes a structure for the PAX9 transcription factor to bind to DNA molecules. The RED subdomain aids and corrects PAI’s recognition of DNA sites, and its variant number is larger than PAI, which might account for why PAX proteins have different target genes. The KDM5B protein helps transcriptional repression of some tumor suppressor gene.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;blosum80-amino-acid-conservation&#34; class=&#34;section level6&#34;&gt;
&lt;h6&gt;BLOSUM80 (amino acid conservation)&lt;/h6&gt;
&lt;p&gt;The BLOSUM80 score displayed the extent of effect of amino acid change on the stability of the PAX9 protein. We expected that this feature would greatly improve the prediction of our model. R package ‘peptider’ was used to obtain the BLOSUM80 matrix. However, the substitution matrix only considered single amino acid change, so we assumed that variants with a replacement length over one (such as a deletion, frameshift, etc) would get the lowest score since they are more likely to have deleterious effects on the protein structure.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;mutation-type&#34; class=&#34;section level6&#34;&gt;
&lt;h6&gt;Mutation Type&lt;/h6&gt;
&lt;p&gt;For the feature of mutation type, it was determined from the original data for gnomAD and cBioPortal. The ClinVar data was processed via VEP to acquire the result. Using the mutation feature and BLOSUM80 matrix, we were able to further classify the data into whether it was in-frameshift and out-of-frame shift since it was expected that frameshift mutation would likely to generate abnormal protein.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;cadd-phred-score&#34; class=&#34;section level6&#34;&gt;
&lt;h6&gt;CADD PHRED score&lt;/h6&gt;
&lt;p&gt;CADD PHRED score was obtained by using the coordinates of variants and submitting to VEP. The result produced a VCF file that was submitted to CADD. Some variants such as fusion proteins did not have a CADD score and were given an estimated CADD score ( in this particular case, maximum CADD score was used in replacement) which may not have reflected its true deleteriousness effect.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;pathogenicity&#34; class=&#34;section level6&#34;&gt;
&lt;h6&gt;Pathogenicity&lt;/h6&gt;
&lt;p&gt;Finally, for the pathogenicity feature–which was our goal of RF prediction–due to the missing allele frequency in most of the cBioPortal and ClinVar it would be nearly impossible to precisely know which variant was neutral or not. Thus, we had to assume that all ClinVar and cBioPortal variants were pathogenic while all gnomAD variants were neutral (after filtering for duplicates) for convenience.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;random-forest&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;Random Forest&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
##  randomForest(formula = phenotype ~ ., data = training_data, importance = T,      ntree = 20, na.action = na.exclude) 
##                Type of random forest: classification
##                      Number of trees: 20
## No. of variables tried at each split: 2
## 
##         OOB estimate of  error rate: 14.44%
## Confusion matrix:
##            neutral pathogenic class.error
## neutral         75         15   0.1666667
## pathogenic      11         79   0.1222222&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The RF model showed that it had an overall accuracy of 85.56%, with 20 decision trees for doing classification tasks. The low value of tree number was due to the limited training data size (80).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;##                 neutral pathogenic MeanDecreaseAccuracy MeanDecreaseGini
## GRCh37Location 6.496823   9.856697             9.376161       25.2817657
## gene_location  1.924800   3.587758             4.798873        8.1996621
## BLOSUM         4.423561   7.614464             6.227631       17.4672859
## Mutation_Type  2.271270   2.648797             2.938764       13.3248609
## inframe        1.025978   0.000000             1.025978        0.4994845
## PHRED          3.754689   1.829102             3.861181       19.7613239&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/PAX9_RF_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;672&#34; /&gt;
Based on the variable importance plot above, the most important variable would be the location relative to the reference GRCh37. On the other hand, the variable with the smallest effect on the predicting power of our model is inframe. This is expected since there were relatively few variants that caused a frame shift in the population.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ten-fold-cross-validation&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;Ten-fold Cross Validation&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;##                           1         2         3         4         5         6
## ten_fold_accuracy 0.8888889 0.7777778 0.8888889 0.8888889 0.7777778 0.8888889
##                           7         8         9        10
## ten_fold_accuracy 0.8333333 0.9444444 0.8888889 0.8888889&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Cross Validation mean accuracy:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.8666667&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By comparing the accuracy between RF (85.56%) and ten-fold (86.67%), we found that despite the low sample size, the model exhibited limited overfitting.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;prediction-result&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;Prediction Result&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;##             prediction_result
## truth        neutral pathogenic Sum
##   pathogenic       5         17  22
##   neutral         20          2  22
##   Sum             25         19  44&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##             accuracy sensitivity specificity precision
## pathogenic 0.8409091   0.8947368   0.9090909 0.8947368&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;From the confusion matrix, the model has relatively good accuracy, sensitivity, specificity, and precision.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusion&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;The objective of the project was to build a random forest model to predict the phenotype of a PAX9 gene variant. The ten-fold cross validation indicated that the model didn’t overfit. While the prediction result was satisfactory, it is important to note that it is only as good as the available training data. It is again acknowledged that there was a risk associated with using the ClinVar resource due to its relatively loose quality check. Additionally, since a large proportion of the allele frequency in cBioPortal and ClinVar was missing, it was difficult to identify all the potential neutral variants and all the variants were assumed to be pathogenic in order to run the RF model. Hence, if possible, allele frequency could potentially be an important feature of any future research on PAX9 gene. Another improvement would be to increase the very limited online human PAX9 gene data to generate more powerful machine learning models. To further refine the prediction of the RF model, a suggestion may be to use the continuous conservation score from other available tools as highly conserved sequences are likely less tolerant to changes. Although BLOSUM80 was insightful on the effect of amino acid substitution on protein structure, adding conservation score could provide a more comprehensive information. Lastly, future research may have a stronger focus on the PAX9’s metabolic pathway. This gene plays a principal role in organogenesis and interacts with many other genes so it is unfortunate that this gene hasn’t received the same attention as other popular genes like p53.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Bonczek et al, ‘PAX9 gene mutations and tooth agenesis: A review’, Clinical Genetics, 2017/02/01, doi: 10.1111/cge.12986.
&lt;a href=&#34;https://www.researchgate.net/publication/313264549_PAX9_gene_mutations_and_tooth_agenesis_A_review&#34; class=&#34;uri&#34;&gt;https://www.researchgate.net/publication/313264549_PAX9_gene_mutations_and_tooth_agenesis_A_review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;UCSC genome browser on PAX9. &lt;a href=&#34;http://www.genome.ucsc.edu/cgi-bin/hgc?hgsid=828585015_qsdofxT4g0z4a48R33zLnyqdtxND&amp;amp;g=htcCdnaAliInWindow&amp;amp;i=NM_006194&amp;amp;c=chr14&amp;amp;l=37126772&amp;amp;r=37147011&amp;amp;o=37126772&amp;amp;aliTable=refSeqAli&amp;amp;table=refGene&#34; class=&#34;uri&#34;&gt;http://www.genome.ucsc.edu/cgi-bin/hgc?hgsid=828585015_qsdofxT4g0z4a48R33zLnyqdtxND&amp;amp;g=htcCdnaAliInWindow&amp;amp;i=NM_006194&amp;amp;c=chr14&amp;amp;l=37126772&amp;amp;r=37147011&amp;amp;o=37126772&amp;amp;aliTable=refSeqAli&amp;amp;table=refGene&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;NCBI data on PAX9: &lt;a href=&#34;https://www.ncbi.nlm.nih.gov/nuccore/NM_006194#feature_NM_006194.3&#34; class=&#34;uri&#34;&gt;https://www.ncbi.nlm.nih.gov/nuccore/NM_006194#feature_NM_006194.3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pellizzari et al. Co-operation between the PAI and RED subdomains of Pax-8 in the interaction with the thyroglobulin promoter. Biochem J. 1999;337 ( Pt 2)(Pt 2):253‐262.
&lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC1219959/&#34; class=&#34;uri&#34;&gt;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC1219959/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;KDB5B gene: &lt;a href=&#34;https://www.genecards.org/cgi-bin/carddisp.pl?gene=KDM5B&#34; class=&#34;uri&#34;&gt;https://www.genecards.org/cgi-bin/carddisp.pl?gene=KDM5B&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ensembl Variant Effect Predictor (VEP): &lt;a href=&#34;https://useast.ensembl.org/info/docs/tools/vep/index.html&#34; class=&#34;uri&#34;&gt;https://useast.ensembl.org/info/docs/tools/vep/index.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Combined Annotation Dependent Depletion (CADD): &lt;a href=&#34;https://cadd.gs.washington.edu/&#34; class=&#34;uri&#34;&gt;https://cadd.gs.washington.edu/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;cBioPortal: &lt;a href=&#34;https://www.cbioportal.org/&#34; class=&#34;uri&#34;&gt;https://www.cbioportal.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ClinVar:&lt;a href=&#34;https://www.ncbi.nlm.nih.gov/clinvar/&#34; class=&#34;uri&#34;&gt;https://www.ncbi.nlm.nih.gov/clinvar/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;gnomAD: &lt;a href=&#34;https://gnomad.broadinstitute.org/&#34; class=&#34;uri&#34;&gt;https://gnomad.broadinstitute.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Random Forest: A. Liaw and M. Wiener (2002). Classification and Regression by randomForest. R News 2(3), 18–22.&lt;/li&gt;
&lt;li&gt;Tidyr package: Hadley Wickham and Lionel Henry (2020). tidyr: Tidy Messy Data. R package; version 1.0.2. &lt;a href=&#34;https://CRAN.R-project.org/package=tidyr&#34; class=&#34;uri&#34;&gt;https://CRAN.R-project.org/package=tidyr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Peptider package: Heike Hofmann, Eric Hare and GGobi Foundation (2015). peptider: Evaluation of Diversity in Nucleotide Libraries. R package version 0.2.2. &lt;a href=&#34;https://CRAN.R-project.org/package=peptider&#34; class=&#34;uri&#34;&gt;https://CRAN.R-project.org/package=peptider&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Dplyr package: Hadley Wickham, Romain François, Lionel Henry and Kirill Müller (2020). Dplyr: A Grammar of Data Manipulation. R package version 0.8.5. &lt;a href=&#34;https://CRAN.R-project.org/package=dplyr&#34; class=&#34;uri&#34;&gt;https://CRAN.R-project.org/package=dplyr&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Modelling, Testing, and Predicting</title>
      <link>/project/modeling_testing_predicting/</link>
      <pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/project/modeling_testing_predicting/</guid>
      <description>


&lt;div id=&#34;modeling&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Modeling&lt;/h2&gt;
&lt;div id=&#34;introduction&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Introduction&lt;/h3&gt;
&lt;p&gt;This dataset is comprised of a merged dataset from &lt;a href=&#34;https://www.who.int/tb/country/data/download/en/&#34;&gt;World Health Organization&lt;/a&gt; and &lt;a href=&#34;https://data.worldbank.org/indicator/NY.GDP.PCAP.CD&#34;&gt;The World Bank Group&lt;/a&gt;. It consists of information about cases of Tuberculosis including new pulmonary cases, previous cases, drug resistant cases (MDR and XDR), mortality due to tuberculosis, etc. This dataset also contains information about country, region, year (2017 or 2018), population number, and GDP per capita in US dollars.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;manova-testing&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;MANOVA testing&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt; #H0: For each response variable, the means of the groups are equal
 #H1: For at least one response variable, at least one group mean differs
head(TB_Data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## country region year new.pul.TB prev.treated.pul.TB
prev.unk.pul.TB new.MDR prev.MDR
## 1 Albania EUR 2017 195 15 0 0 0
## 2 Algeria AFR 2017 6278 419 0 11 28
## 3 Algeria AFR 2018 6137 362 21 2 5
## 4 American Samoa WPR 2017 3 0 0 1 0
## 5 Andorra EUR 2017 1 0 0 0 0
## 6 Angola AFR 2018 31098 6623 0 0 0
## MDR.tested XDR pop.number TB.100k TB.num TB_mort.100k
TB_mort.num GDP
## 1 0 0 2884169 20.0 580 0.34 10 4532.889
## 2 39 4 41389189 70.0 29000 7.70 3200 4048.285
## 3 7 4 42228408 69.0 29000 7.70 3300 4278.850
## 4 1 0 55620 10.0 6 0.85 0 11398.777
## 5 0 0 77001 1.5 1 0.12 0 39134.393
## 6 0 0 30809787 355.0 109000 72.00 22000 3432.386&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;man1&amp;lt;-manova(cbind(new.pul.TB,prev.treated.pul.TB,prev.unk.pul.TB, new.MDR, prev.MDR, XDR, pop.number, TB.100k, TB_mort.100k, GDP)~region, data=TB_Data)
summary(man1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Df Pillai approx F num Df den Df Pr(&amp;gt;F)
## region 5 1.2666 7.1585 50 1055 &amp;lt; 2.2e-16 ***
## Residuals 216
## ---
## Signif. codes: 0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1
&amp;#39; &amp;#39; 1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There are alot of assumptions for the MANOVA test which indicates that they are usually hard to test and/or meet. These assumptions include: random samples, independent observations, dependent variables have multivariate normality, homogeneity of within-group covariance matrices for each dependent variable and equal covariance between any two dependent variables, linear relationships amoung dependent variables, no extreme univariate or multivariate outliers, and no multicollinearity. The dataset would likely not have been able to meet the assumptions, especially since many of the variables are likely correlated (e.g.: new drug resistant TB cases is likely related to previous/new TB cases ).&lt;/p&gt;
&lt;p&gt;For the MANOVA, only 10 dependent variables were chosen. For example, only one of TB.100k (TB cases per 100,000 people) and TB.num (TB cases total) since they are likely to be highly related. The p-value (&amp;lt; 2.2e-16) is significant for the MANOVA test, therefore, for at least one of the response variables, the mean between regions is different.&lt;/p&gt;
&lt;div id=&#34;univariate-anova-testing&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Univariate ANOVA testing&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary.aov(man1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Response new.pul.TB :
## Df Sum Sq Mean Sq F value Pr(&amp;gt;F)
## region 5 3.7015e+11 7.4029e+10 13.356 2.385e-11 ***
## Residuals 216 1.1972e+12 5.5427e+09
## ---
## Signif. codes: 0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1
&amp;#39; &amp;#39; 1
##
## Response prev.treated.pul.TB :
## Df Sum Sq Mean Sq F value Pr(&amp;gt;F)
## region 5 1.1311e+10 2262181943 7.6302 1.268e-06 ***
## Residuals 216 6.4039e+10 296477285
## ---
## Signif. codes: 0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1
&amp;#39; &amp;#39; 1
##
## Response prev.unk.pul.TB :
## Df Sum Sq Mean Sq F value Pr(&amp;gt;F)
## region 5 30299516 6059903 3.4395 0.005189 **
## Residuals 216 380558289 1761844
## ---
## Signif. codes: 0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1
&amp;#39; &amp;#39; 1
##
## Response new.MDR :
## Df Sum Sq Mean Sq F value Pr(&amp;gt;F)
## region 5 4062809 812562 1.8615 0.1023
## Residuals 216 94285428 436507
##
## Response prev.MDR :
## Df Sum Sq Mean Sq F value Pr(&amp;gt;F)
## region 5 12235002 2447000 1.9446 0.08818 .
## Residuals 216 271810715 1258383
## ---
## Signif. codes: 0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1
&amp;#39; &amp;#39; 1
##
## Response XDR :
## Df Sum Sq Mean Sq F value Pr(&amp;gt;F)
## region 5 468938 93788 1.388 0.2299
## Residuals 216 14595646 67572
##
## Response pop.number :
## Df Sum Sq Mean Sq F value Pr(&amp;gt;F)
## region 5 7.5761e+17 1.5152e+17 10.661 3.61e-09 ***
## Residuals 216 3.0700e+18 1.4213e+16
## ---
## Signif. codes: 0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1
&amp;#39; &amp;#39; 1
##
## Response TB.100k :
## Df Sum Sq Mean Sq F value Pr(&amp;gt;F)
## region 5 1375556 275111 22.228 &amp;lt; 2.2e-16 ***
## Residuals 216 2673438 12377
## ---
## Signif. codes: 0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1
&amp;#39; &amp;#39; 1
##
## Response TB_mort.100k :
## Df Sum Sq Mean Sq F value Pr(&amp;gt;F)
## region 5 81943 16388.6 23.624 &amp;lt; 2.2e-16 ***
## Residuals 216 149845 693.7
## ---
## Signif. codes: 0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1
&amp;#39; &amp;#39; 1
##
## Response GDP :
## Df Sum Sq Mean Sq F value Pr(&amp;gt;F)
## region 5 2.0424e+10 4084759281 15.597 4.243e-13 ***
## Residuals 216 5.6568e+10 261891068
## ---
## Signif. codes: 0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1
&amp;#39; &amp;#39; 1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Of the 10 dependent variables tested, the univariate ANOVAs with a p-value &amp;lt;0.05 include: new.pul.TB, prev.treated.pul.TB, prev.unk.pul.TB, pop.number, TB.100k, TB_mort.100k, and GDP.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;post-hoc-t-testing&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Post hoc t-testing&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# region in world: AFR=Africa; AMR=Americas;
# EMR=Eastern Mediterranean; EUR=Europe; SEAR=South-East
# Asia; WPR=Western Pacific

#New pulmonary tuberculosis cases 
pairwise.t.test(TB_Data$new.pul.TB,TB_Data$region,p.adj=&amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Pairwise comparisons using t tests with pooled SD 
## 
## data:  TB_Data$new.pul.TB and TB_Data$region 
## 
##     AFR     AMR     EMR     EUR     SEA    
## AMR 0.71    -       -       -       -      
## EMR 0.83    0.60    -       -       -      
## EUR 0.64    0.96    0.54    -       -      
## SEA 2.1e-11 7.2e-12 2.5e-09 3.8e-13 -      
## WPR 0.80    0.92    0.67    0.87    4.7e-11
## 
## P value adjustment method: none&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Previously treated pulmonary tuberculosis cases 
pairwise.t.test(TB_Data$prev.treated.pul.TB,TB_Data$region,p.adj=&amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Pairwise comparisons using t tests with pooled SD 
## 
## data:  TB_Data$prev.treated.pul.TB and TB_Data$region 
## 
##     AFR     AMR     EMR     EUR     SEA    
## AMR 0.88    -       -       -       -      
## EMR 0.90    0.80    -       -       -      
## EUR 0.98    0.89    0.87    -       -      
## SEA 1.3e-07 1.0e-07 2.4e-06 3.1e-08 -      
## WPR 0.96    0.93    0.87    0.98    3.7e-07
## 
## P value adjustment method: none&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Confirmed pulmonary TB cases with unknown TB treatment history
pairwise.t.test(TB_Data$prev.unk.pul.TB,TB_Data$region,p.adj=&amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Pairwise comparisons using t tests with pooled SD 
## 
## data:  TB_Data$prev.unk.pul.TB and TB_Data$region 
## 
##     AFR     AMR     EMR     EUR     SEA    
## AMR 0.97315 -       -       -       -      
## EMR 0.98235 0.99463 -       -       -      
## EUR 0.74157 0.77669 0.80590 -       -      
## SEA 0.00023 0.00031 0.00090 0.00028 -      
## WPR 0.98122 0.95689 0.96726 0.74643 0.00042
## 
## P value adjustment method: none&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Population Number 
pairwise.t.test(TB_Data$pop.number,TB_Data$region,p.adj=&amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Pairwise comparisons using t tests with pooled SD 
## 
## data:  TB_Data$pop.number and TB_Data$region 
## 
##     AFR     AMR     EMR     EUR     SEA    
## AMR 1.00    -       -       -       -      
## EMR 0.61    0.62    -       -       -      
## EUR 0.92    0.93    0.64    -       -      
## SEA 5.7e-10 9.3e-10 1.2e-07 1.5e-10 -      
## WPR 0.76    0.77    0.46    0.68    8.6e-10
## 
## P value adjustment method: none&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#TB cases per 100,000 individuals
pairwise.t.test(TB_Data$TB.100k,TB_Data$region,p.adj=&amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Pairwise comparisons using t tests with pooled SD 
## 
## data:  TB_Data$TB.100k and TB_Data$region 
## 
##     AFR     AMR     EMR     EUR     SEA    
## AMR 3.4e-12 -       -       -       -      
## EMR 4.2e-06 0.11090 -       -       -      
## EUR 1.2e-15 0.72536 0.04362 -       -      
## SEA 0.72362 7.4e-07 0.00082 4.6e-08 -      
## WPR 0.02843 6.2e-06 0.01175 1.5e-07 0.18283
## 
## P value adjustment method: none&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#TB mortality cases per 100,000 individuals 
pairwise.t.test(TB_Data$TB_mort.100k,TB_Data$region,p.adj=&amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Pairwise comparisons using t tests with pooled SD 
## 
## data:  TB_Data$TB_mort.100k and TB_Data$region 
## 
##     AFR     AMR     EMR     EUR     SEA    
## AMR 2.3e-15 -       -       -       -      
## EMR 9.7e-10 0.34679 -       -       -      
## EUR &amp;lt; 2e-16 0.74776 0.19773 -       -      
## SEA 0.00066 0.00411 0.05824 0.00109 -      
## WPR 1.2e-10 0.21678 0.85228 0.09768 0.06676
## 
## P value adjustment method: none&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#GDP 
pairwise.t.test(TB_Data$GDP,TB_Data$region,p.adj=&amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Pairwise comparisons using t tests with pooled SD 
## 
## data:  TB_Data$GDP and TB_Data$region 
## 
##     AFR     AMR     EMR     EUR     SEA    
## AMR 0.03154 -       -       -       -      
## EMR 0.00053 0.10499 -       -       -      
## EUR 1.0e-13 2.1e-07 0.00652 -       -      
## SEA 0.82314 0.16977 0.01100 2.6e-07 -      
## WPR 0.00045 0.13530 0.81059 0.00098 0.01345
## 
## P value adjustment method: none&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;bonferroni-correction&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Bonferroni correction&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#MANOVA: 1 
#ANOVA: 11
#T-tests: 15* 7= 105

#Probability of a type I error if unadjusted 
1-(1-0.05)^117&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.9975245&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#New alpha 
0.05/(1+10+105)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.0004310345&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The total number of tests conducted is 117, therefore if unadjusted, the probability of at least one type I error is 0.9975. Therefore, the bonferroni correction was used to obtain the new alpha value of 0.00043 so that the overall alpha value remains at 0.05.&lt;/p&gt;
&lt;p&gt;Using this new alpha value, the MANOVA is still significant. The ANOVAs of new.pul.TB, prev.treated.pul.TB, pop.number, TB.100k, TB_mort.100k, and GDP are still significant. Only the ANOVA of prev.unk.pul.TB is no longer significant (p-value=0.005189). For the post-hoc analysis of the new pulmonary TB cases, previously treated pulmonary TB, and population number only the means of SEA are different from the other regions. For TB.100k there are significant differences between AFR/AMR, AFR/EMR, AFR/EUR, AMR/SEA, AMR/WPR, SEA/EMR, EUR/SEA, and EUR/WPR. For the TB mortality for every 100,000 individuals, AFR is significantly different from the other regions. For GDP, AFR/EMR, AFR/EUR, AFR/WPR, AMR/EUR, EUR/SEA, and EUR/WPR are significantly different.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;randomization-test-permanova&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Randomization test: PERMANOVA&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#H0: The centroid and dispersion of points is the same for the different regions
#H1: The centroid and dispersion of points is different for at least one of the different regions


#compute distances/dissimilarities
dists&amp;lt;-TB_Data%&amp;gt;%dplyr::select(new.pul.TB,prev.treated.pul.TB,prev.unk.pul.TB, new.MDR, prev.MDR, XDR, pop.number, TB.100k, TB_mort.100k, GDP)%&amp;gt;%dist()


#compute observed F
SST&amp;lt;- sum(dists^2)/150
SSW&amp;lt;-TB_Data%&amp;gt;%group_by(region)%&amp;gt;%dplyr::select(new.pul.TB,prev.treated.pul.TB,prev.unk.pul.TB, new.MDR, prev.MDR, XDR, pop.number, TB.100k, TB_mort.100k, GDP)%&amp;gt;%
 do(d=dist(.[2:3],&amp;quot;euclidean&amp;quot;))%&amp;gt;%ungroup()%&amp;gt;%
 summarise(sum(d[[1]]^2)/50 + sum(d[[2]]^2)/50+ sum(d[[3]]^2)/50)%&amp;gt;%pull
F_obs&amp;lt;-((SST-SSW)/2)/(SSW/147) #observed F statistic
F_obs&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 21739142596&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# compute null distribution for F
Fs&amp;lt;-replicate(1000,{
new&amp;lt;-TB_Data%&amp;gt;%mutate(region=sample(region)) #permute the region vector
SSW&amp;lt;-new%&amp;gt;%group_by(region)%&amp;gt;%dplyr::select(new.pul.TB,prev.treated.pul.TB,prev.unk.pul.TB, new.MDR, prev.MDR, XDR, pop.number, TB.100k, TB_mort.100k, GDP)%&amp;gt;%
 do(d=dist(.[2:3],&amp;quot;euclidean&amp;quot;))%&amp;gt;%ungroup()%&amp;gt;%
 summarise(sum(d[[1]]^2)/50 + sum(d[[2]]^2)/50+ sum(d[[3]]^2)/50)%&amp;gt;%pull
((SST-SSW)/2)/(SSW/147) #calculate new F on randomized data
})

{hist(Fs,prob = T); abline(v=F_obs, col=&amp;quot;red&amp;quot;, add=T)}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/Modeling_Testing_Predicting_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;768&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(Fs&amp;gt;F_obs)  #p-value &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.007&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Since the data is unlikely to meet the assumptions of the MANOVA, a randomization-test MANOVA (PERMANOVA) was conducted which resulted in a p-value &amp;lt; 0.05 (significant). Therefore the null hypothesis is rejected in favor of the alternative hypothesis that there is a significant difference between the centroid and/or the spread of the points is not equal between the different regions. This therefore supports the conclusion of the MANOVA conducted previously.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;linear-regression-model&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Linear regression model&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;TB_Data$GDP_c &amp;lt;- TB_Data$GDP - mean(TB_Data$GDP, na.rm = T)
TB_Data$TB_mort.100k_c &amp;lt;- TB_Data$TB_mort.100k - mean(TB_Data$TB_mort.100k, na.rm = T)
fit1&amp;lt;-lm(TB_mort.100k_c ~ GDP_c*region, data=TB_Data)

#uncorrected SEs
summary(fit1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##
## Call:
## lm(formula = TB_mort.100k_c ~ GDP_c * region, data =
TB_Data)
##
## Residuals:
## Min 1Q Median 3Q Max
## -54.036 -5.622 -1.086 1.755 144.129
##
## Coefficients:
## Estimate Std. Error t value Pr(&amp;gt;|t|)
## (Intercept) 1.059e+00 1.514e+01 0.070 0.9443
## GDP_c -2.858e-03 1.179e-03 -2.423 0.0162 *
## regionAMR -1.472e+01 1.595e+01 -0.923 0.3572
## regionEMR -6.498e+00 1.605e+01 -0.405 0.6860
## regionEUR -1.457e+01 1.557e+01 -0.936 0.3505
## regionSEA -3.136e+01 3.331e+01 -0.942 0.3475
## regionWPR -5.678e+00 1.582e+01 -0.359 0.7200
## GDP_c:regionAMR 2.651e-03 1.328e-03 1.996 0.0472 *
## GDP_c:regionEMR 2.457e-03 1.211e-03 2.029 0.0437 *
## GDP_c:regionEUR 2.789e-03 1.188e-03 2.349 0.0198 *
## GDP_c:regionSEA -6.893e-04 2.812e-03 -0.245 0.8066
## GDP_c:regionWPR 2.541e-03 1.204e-03 2.110 0.0361 *
## ---
## Signif. codes: 0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1
&amp;#39; &amp;#39; 1
##
## Residual standard error: 25.98 on 210 degrees of freedom
## Multiple R-squared: 0.3884, Adjusted R-squared: 0.3564
## F-statistic: 12.12 on 11 and 210 DF, p-value: &amp;lt; 2.2e-16&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For the model with uncorrected standard errors, controlling for region, for every increase of 1 USD of GDP from the mean, the number of cases of mortality due to tuberculosis per 100,000 people decreases by 2.858e-03. Compared to the reference region of AFR and controlling for GDP, the mean number of cases of mortality due to tuberculosis per 100,000 people decreases for all regions: AMR (1.472e+01), EMR(6.498e+00), EUR (1.457e+01), SEA (3.136e+01), and WPR (5.678e+00). The coefficient for the interactions describe the difference in the
effect of GDP on the mortality due to tuberculosis per 100,00 people depending on which region the country is in (the slope difference between the regions). For example, the slope difference between AFR and: AMR (2.651e-03), EMR (2.457e-03), EUR (2.789e-03), SEA (-6.893e-04), and WPR (2.541e-03).&lt;/p&gt;
&lt;div id=&#34;plot-the-regression&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Plot the regression&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;TB_Data%&amp;gt;%ggplot(aes(x=GDP_c, y=TB_mort.100k_c,group=region))+geom_point(aes(color=region))+geom_smooth(method = &amp;#39;lm&amp;#39;,se=F, aes(color=region))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/Modeling_Testing_Predicting_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;768&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;asumptions&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Asumptions&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Linear relationship between each predictor and response (no scatterplot for region since it is categorical)
ggplot(TB_Data, aes(x=GDP_c, y=TB_mort.100k_c,group=region))+geom_point(aes(color=region))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/Modeling_Testing_Predicting_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;768&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Confirm normality of residuals
qqnorm(fit1$residuals, main = &amp;quot;QQ-plot of Model Residuals&amp;quot;)
qqline(fit1$residuals, col = &amp;quot;red&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/Modeling_Testing_Predicting_files/figure-html/unnamed-chunk-9-2.png&#34; width=&#34;768&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Confirm equal variance
plot(fit1$fitted.values, fit1$residuals, xlab = &amp;quot;Fitted Values&amp;quot;, 
    ylab = &amp;quot;Residuals&amp;quot;, pch = 20)
abline(h = 0, col = &amp;quot;red&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/Modeling_Testing_Predicting_files/figure-html/unnamed-chunk-9-3.png&#34; width=&#34;768&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(sandwich); library(lmtest)
bptest(fit1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  studentized Breusch-Pagan test
## 
## data:  fit1
## BP = 58.313, df = 11, p-value = 1.905e-08&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The data fails all assumptions. The scatterplot does not show a linear relationship between GDP and TB_mort.100k. The QQ-plot of the model residuals is also not normal. There is also a funneling pattern in the residual plot which indicates that it does not meet the assumption of equal variance (homoskedasticity). This is again confirmed by the Breusch-Pagan test which concluded that the homoskedasticity assumption is not met (p-value=1.905e-08).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;recompute-regression-results-with-robust-standard-errors&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Recompute regression results with robust standard errors&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#robust SEs
coeftest(fit1, vcov = vcovHC(fit1))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##
## t test of coefficients:
##
## Estimate Std. Error t value Pr(&amp;gt;|t|)
## (Intercept) 1.0589e+00 2.0328e+01 0.0521 0.95851
## GDP_c -2.8577e-03 1.7036e-03 -1.6775 0.09494 .
## regionAMR -1.4716e+01 2.0333e+01 -0.7238 0.47001
## regionEMR -6.4979e+00 2.0762e+01 -0.3130 0.75462
## regionEUR -1.4572e+01 2.0334e+01 -0.7166 0.47441
## regionSEA -3.1361e+01 2.2356e+01 -1.4028 0.16215
## regionWPR -5.6775e+00 2.0456e+01 -0.2776 0.78163
## GDP_c:regionAMR 2.6510e-03 1.7052e-03 1.5546 0.12155
## GDP_c:regionEMR 2.4566e-03 1.7146e-03 1.4327 0.15342
## GDP_c:regionEUR 2.7895e-03 1.7036e-03 1.6374 0.10305
## GDP_c:regionSEA -6.8927e-04 1.9443e-03 -0.3545 0.72331
## GDP_c:regionWPR 2.5408e-03 1.7056e-03 1.4897 0.13781
## ---
## Signif. codes: 0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1
&amp;#39; &amp;#39; 1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A model with robust standard errors should be used if the data is heteroskedastic. With uncorrected standard errors, the coefficient estimates of the main effect of GDP (p-value = 0.0162) was significant. The interactions GDP_c:regionAMR (p-value= 0.0472), GDP_c:regionEMR (p-value= 0.0437), GDP_c:regionEUR (p-value= 0.0198), and GDP_c:regionWPR (p-value= 0.0361) were also significant. Contrastingly, using the more robust SEs (more conservative), none of the coefficient estimates are still significant.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;effect-size&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Effect Size&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(fit1)$adj.r.squared&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.3563608&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The adjusted r-squared of 0.356 indicates that 35.6% of variation in the mean number of cases of mortality due to tuberculosis per 100,000 people is explained by the model.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;regression-but-without-interactions&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Regression but without interactions&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;fit2&amp;lt;-lm(TB_mort.100k_c ~ GDP_c+region, data=TB_Data)
summary(fit2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##
## Call:
## lm(formula = TB_mort.100k_c ~ GDP_c + region, data =
TB_Data)
##
## Residuals:
## Min 1Q Median 3Q Max
## -49.946 -6.211 -1.696 2.397 146.834
##
## Coefficients:
## Estimate Std. Error t value Pr(&amp;gt;|t|)
## (Intercept) 3.394e+01 4.177e+00 8.125 3.49e-14 ***
## GDP_c -2.055e-04 1.101e-04 -1.866 0.063421 .
## regionAMR -4.759e+01 5.783e+00 -8.230 1.80e-14 ***
## regionEMR -3.978e+01 6.834e+00 -5.822 2.10e-08 ***
## regionEUR -4.572e+01 5.796e+00 -7.888 1.53e-13 ***
## regionSEA -2.635e+01 7.646e+00 -3.446 0.000684 ***
## regionWPR -3.867e+01 6.261e+00 -6.177 3.23e-09 ***
## ---
## Signif. codes: 0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1
&amp;#39; &amp;#39; 1
##
## Residual standard error: 26.19 on 215 degrees of freedom
## Multiple R-squared: 0.3638, Adjusted R-squared: 0.3461
## F-statistic: 20.49 on 6 and 215 DF, p-value: &amp;lt; 2.2e-16&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Examining only the main effects, the effect of GDP is no longer significant while all the coeficient estimates for region are now significant.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;linear-regression-model-with-bootstrapped-standard-errors&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Linear regression model with bootstrapped standard errors&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# repeat 5000 times, saving the coefficients each time
samp_distn&amp;lt;-replicate(5000, {
 boot_TB&amp;lt;-TB_Data[sample(nrow(TB_Data),replace=TRUE),]
 fit3&amp;lt;-lm(TB_mort.100k_c ~ GDP_c*region, data=boot_TB)
 coef(fit3)
})

#Estimated SEs
samp_distn%&amp;gt;%t%&amp;gt;%as.data.frame%&amp;gt;%summarise_all(sd)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (Intercept) GDP_c regionAMR regionEMR regionEUR
regionSEA regionWPR GDP_c:regionAMR
## 1 38.6096 0.003045773 38.63531 38.79675 38.6104 41.86718
38.70029 0.003046698
## GDP_c:regionEMR GDP_c:regionEUR GDP_c:regionSEA
GDP_c:regionWPR
## 1 0.003055984 0.003045843 0.003347488 0.003045734&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Bootstrapped standard errors are used when the data is non-normal as well. Compared to the original standard errors, the standard errors for all the coefficient estimates increased (more conservative). The p-values are therefore higher as well because of the higher standard errors. Compared to the robust standard errors, the bootstrapped standard errors are also higher. Therefore, the p-values are also higher (more conservative).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;logistic-regression-predicting-a-binary-categorical-variable&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Logistic regression predicting a binary categorical variable&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;BinaryTB&amp;lt;-TB_Data%&amp;gt;%mutate(y = as.numeric(ifelse(XDR &amp;gt; 0, 1, 0)))
fit4&amp;lt;-glm(y~region+TB.100k+pop.number,data=BinaryTB,family=binomial(link=&amp;quot;logit&amp;quot;))
coeftest(fit4)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##
## z test of coefficients:
##
## Estimate Std. Error z value Pr(&amp;gt;|z|)
## (Intercept) -2.5554e+00 5.5591e-01 -4.5968 4.291e-06 ***
## regionAMR 2.2980e-01 6.5681e-01 0.3499 0.7264340
## regionEMR 1.2454e+00 6.4541e-01 1.9296 0.0536624 .
## regionEUR 2.2567e+00 5.6757e-01 3.9761 7.005e-05 ***
## regionSEA 4.0806e-01 8.6513e-01 0.4717 0.6371581
## regionWPR -2.4001e-01 6.4077e-01 -0.3746 0.7079782
## TB.100k 5.4362e-03 1.5506e-03 3.5059 0.0004551 ***
## pop.number 3.8675e-08 1.0182e-08 3.7984 0.0001456 ***
## ---
## Signif. codes: 0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1
&amp;#39; &amp;#39; 1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;exp(coef(fit4))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (Intercept) regionAMR regionEMR regionEUR regionSEA
regionWPR TB.100k pop.number
## 0.07766039 1.25834993 3.47417743 9.55178621 1.50390035
0.78661626 1.00545098 1.00000004&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A binary variable was created that measures whether there are any XDR (extensively drug resistant tuberculosis) cases in a country. Controlling for TB.100k and population number, the odds of having a XDR TB case are 1.25 times higher for the region AMR than AFR. The odds for the other regions compared to AFR: EMR (3.47), EUR (9.55), SEA (1.50), WPR (0.79). The region with the lowest odds of a country having a case of XDR TB is WPR. The region that has the highest odds of a country having a case of XDR TB is EUR. Controlling for region and TB.100k, for every 1-unit increase in population number, odds of having a case of XDR TB change by a factor of 1.00000004. Controlling for region and population number, for every 1-unit increase in TB.100k, odds of having a case of XDR TB change by a factor of 1.00545098 (increase by 0.54%).&lt;/p&gt;
&lt;div id=&#34;confusion-matrix&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Confusion Matrix&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;prob &amp;lt;- predict(fit4, type = &amp;quot;response&amp;quot;) #get predictions
pred &amp;lt;- ifelse(prob &amp;gt; 0.5, 1, 0)
table(truth = BinaryTB$y, prediction = pred) %&amp;gt;% addmargins&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      prediction
## truth   0   1 Sum
##   0   109  23 132
##   1    34  56  90
##   Sum 143  79 222&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Classification Function
class_diag&amp;lt;-function(probs,truth){

tab&amp;lt;-table(factor(probs&amp;gt;.5,levels=c(&amp;quot;FALSE&amp;quot;,&amp;quot;TRUE&amp;quot;)),truth)
acc=sum(diag(tab))/sum(tab)
sens=tab[2,2]/colSums(tab)[2]
spec=tab[1,1]/colSums(tab)[1]
ppv=tab[2,2]/rowSums(tab)[2]

if(is.numeric(truth)==FALSE &amp;amp; is.logical(truth)==FALSE) truth&amp;lt;-as.numeric(truth)-1

#CALCULATE EXACT AUC
ord&amp;lt;-order(probs, decreasing=TRUE)
probs &amp;lt;- probs[ord]; truth &amp;lt;- truth[ord]

TPR=cumsum(truth)/max(1,sum(truth)) 
FPR=cumsum(!truth)/max(1,sum(!truth))

dup&amp;lt;-c(probs[-1]&amp;gt;=probs[-length(probs)], FALSE)
TPR&amp;lt;-c(0,TPR[!dup],1); FPR&amp;lt;-c(0,FPR[!dup],1)

n &amp;lt;- length(TPR)
auc&amp;lt;- sum( ((TPR[-1]+TPR[-n])/2) * (FPR[-1]-FPR[-n]) )

data.frame(acc,sens,spec,ppv,auc)
}

class_diag(prob, BinaryTB$y)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##         acc      sens      spec       ppv       auc
## 1 0.7432432 0.6222222 0.8257576 0.7088608 0.8367845&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;From the confusion matrix, the model has an accuracy of 0.743 which is fair. The sensitivity or true positive rate is 0.622 which is poor. The specificity or true negative rate is 0.826 which is good. The precision or positive predictive value of the model is 0.709 which is fair.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;density-of-log-odds-logit&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Density of log-odds (logit)&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;BinaryTB$logit&amp;lt;-predict(fit4) #get predicted log-odds
BinaryTB$factor.y&amp;lt;-factor(BinaryTB$y,levels=c(1,0))
ggplot(BinaryTB,aes(logit, fill=factor.y))+geom_density(alpha=.3)+
  geom_vline(xintercept=0,lty=2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/Modeling_Testing_Predicting_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;768&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
#### ROC Curve&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(plotROC)
prob &amp;lt;- predict(fit4, type = &amp;quot;response&amp;quot;)
ROCplot1 &amp;lt;- ggplot(BinaryTB) + geom_roc(aes(d = y, m = prob),n.cuts = 0)+geom_segment(aes(x=0,xend=1,y=0,yend=1),lty=2) 
ROCplot1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/Modeling_Testing_Predicting_files/figure-html/unnamed-chunk-17-1.png&#34; width=&#34;768&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;calc_auc(ROCplot1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   PANEL group       AUC
## 1     1    -1 0.8367845&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The AUC is determined to be 0.837 which suggests that the model is good at predicting whether a country has a case of XDR TB (the probability that a randomly selected country with a case of XDR TB has a higher prediction than a randomly selected country without a case of XDR TB).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;fold-cv&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;10-fold CV&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;k = 10
data1 &amp;lt;- BinaryTB[sample(nrow(BinaryTB)), ] #put dataset in random order
folds &amp;lt;- cut(seq(1:nrow(BinaryTB)), breaks = k, labels = F) #create folds
diags &amp;lt;- NULL
for (i in 1:k) {
# FOR EACH OF 10 FOLDS
train &amp;lt;- data1[folds != i, ] #CREATE TRAINING SET
test &amp;lt;- data1[folds == i, ] #CREATE TESTING SET
truth &amp;lt;- test$y
fit &amp;lt;- glm(y~region+TB.100k+pop.number,data=BinaryTB,family=binomial(link=&amp;quot;logit&amp;quot;))
probs &amp;lt;- predict(fit, newdata = test, type = &amp;quot;response&amp;quot;)
diags &amp;lt;- rbind(diags, class_diag(probs, truth))
}
apply(diags, 2, mean) #AVERAGE THE DIAGNOSTICS ACROSS THE 10 FOLDS&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##       acc      sens      spec       ppv       auc 
## 0.7434783 0.6442857 0.8261991 0.7169048 0.8454062&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The out of sample confusion matrix for this model has: accuracy (0.742- fair), sensitivity (0.625- poor), specificity (0.811- good), precision (0.692- poor). Although, precision decreased from fair to poor, the classifications did not change greatly. The AUC also did not change significantly which suggests that there was not overfitting.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;lasso-least-absolute-shrinkage-and-selection-operator-regression&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;LASSO (least absolute shrinkage and selection operator) Regression&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(BinaryTB)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## country region year new.pul.TB prev.treated.pul.TB
prev.unk.pul.TB new.MDR prev.MDR
## 1 Albania EUR 2017 195 15 0 0 0
## 2 Algeria AFR 2017 6278 419 0 11 28
## 3 Algeria AFR 2018 6137 362 21 2 5
## 4 American Samoa WPR 2017 3 0 0 1 0
## 5 Andorra EUR 2017 1 0 0 0 0
## 6 Angola AFR 2018 31098 6623 0 0 0
## MDR.tested XDR pop.number TB.100k TB.num TB_mort.100k
TB_mort.num GDP GDP_c
## 1 0 0 2884169 20.0 580 0.34 10 4532.889 -10208.887
## 2 39 4 41389189 70.0 29000 7.70 3200 4048.285 -10693.491
## 3 7 4 42228408 69.0 29000 7.70 3300 4278.850 -10462.926
## 4 1 0 55620 10.0 6 0.85 0 11398.777 -3342.999
## 5 0 0 77001 1.5 1 0.12 0 39134.393 24392.617
## 6 0 0 30809787 355.0 109000 72.00 22000 3432.386
-11309.391
## TB_mort.100k_c y logit factor.y
## 1 -16.129009 0 -0.07841423 0
## 2 -8.769009 1 -0.57416872 1
## 3 -8.769009 1 -0.54714847 1
## 4 -15.619009 0 -2.73891183 0
## 5 -16.349009 0 -0.28754952 0
## 6 55.530991 0 0.56598835 0&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;LassoTB&amp;lt;-BinaryTB%&amp;gt;%dplyr::select(region,year,new.pul.TB, prev.treated.pul.TB, prev.unk.pul.TB,new.MDR, prev.MDR, MDR.tested,pop.number, TB.100k, TB.num, TB_mort.100k, TB_mort.num,GDP,y)  

fit5 &amp;lt;- glm(y~.,data=LassoTB,family=binomial(link=&amp;quot;logit&amp;quot;))
library(glmnet)
x &amp;lt;- model.matrix(fit5)[, -1]
y &amp;lt;- as.matrix(LassoTB$y)
cv &amp;lt;- cv.glmnet(x, y, family = &amp;quot;binomial&amp;quot;)
lasso &amp;lt;- glmnet(x, y, family = &amp;quot;binomial&amp;quot;, lambda = cv$lambda.1se)
coef(lasso)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 19 x 1 sparse Matrix of class &amp;quot;dgCMatrix&amp;quot;
##                                s0
## (Intercept)         -1.280359e+00
## regionAMR           -9.392417e-03
## regionEMR            5.857288e-01
## regionEUR            1.624157e+00
## regionSEA            2.860857e-01
## regionWPR           -2.740013e-01
## year                 .           
## new.pul.TB           .           
## prev.treated.pul.TB  .           
## prev.unk.pul.TB      .           
## new.MDR              8.206249e-04
## prev.MDR             .           
## MDR.tested           .           
## pop.number           8.126931e-09
## TB.100k              2.901032e-03
## TB.num               .           
## TB_mort.100k         .           
## TB_mort.num          .           
## GDP                 -1.438615e-05&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Variables with a non-zero coefficient from LASSO will be retained in the model: region, new.MDR, pop.number, TB.100k, and GDP. Therefore, these are the most important predictors of if a country has atleast one case of XDR TB.&lt;/p&gt;
&lt;div id=&#34;perform-10-fold-cv-using-lasso-model&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Perform 10-fold CV using LASSO model&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Model with just non-zero lasso coefficient estimates
fit6 &amp;lt;- glm(y ~ region+new.MDR+pop.number+TB.100k+GDP, data = LassoTB, family = &amp;quot;binomial&amp;quot;)

prob6 &amp;lt;- predict(fit6, type = &amp;quot;response&amp;quot;)
class_diag(prob6, LassoTB$y)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##         acc      sens      spec      ppv       auc
## 1 0.7972973 0.6333333 0.9090909 0.826087 0.8883838&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#10-fold CV 
k = 10
data1 &amp;lt;- LassoTB[sample(nrow(LassoTB)), ] #put dataset in random order
folds &amp;lt;- cut(seq(1:nrow(LassoTB)), breaks = k, labels = F) #create folds
diags &amp;lt;- NULL
for (i in 1:k) {
# FOR EACH OF 10 FOLDS
train &amp;lt;- data1[folds != i, ] #CREATE TRAINING SET
test &amp;lt;- data1[folds == i, ] #CREATE TESTING SET
truth &amp;lt;- test$y
fit &amp;lt;- glm(y ~ region+new.MDR+pop.number+TB.100k+GDP, data = LassoTB, family = &amp;quot;binomial&amp;quot;)
probs &amp;lt;- predict(fit, newdata = test, type = &amp;quot;response&amp;quot;)
diags &amp;lt;- rbind(diags, class_diag(probs, truth))
}
apply(diags, 2, mean) #AVERAGE THE DIAGNOSTICS ACROSS THE 10 FOLDS&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##       acc      sens      spec       ppv       auc 
## 0.7972332 0.6279670 0.9124291 0.8128175 0.8995426&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This new model’s out of sample accuracy is 0.797 which is fair. It is slightly higher than the previous model’s out of sample accuracy which was 0.743. The AUC also slightly increased from 0.839 to 0.886 (both models are good predictors of if there are XDR TB cases in a country).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## R version 3.6.1 (2019-07-05)
## Platform: x86_64-apple-darwin15.6.0 (64-bit)
## Running under: macOS Mojave 10.14.6
##
## Matrix products: default
## BLAS:
/Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRblas.0.dylib
## LAPACK:
/Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRlapack.dylib
##
## locale:
## [1]
en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
##
## attached base packages:
## [1] stats graphics grDevices utils datasets methods base
##
## other attached packages:
## [1] glmnet_3.0-2 Matrix_1.2-18 plotROC_2.2.1
lmtest_0.9-37 zoo_1.8-7 sandwich_2.5-1
## [7] forcats_0.5.0 stringr_1.4.0 dplyr_0.8.5 purrr_0.3.3
readr_1.3.1 tidyr_1.0.2
## [13] tibble_2.1.3 ggplot2_3.3.0 tidyverse_1.3.0
knitr_1.28
##
## loaded via a namespace (and not attached):
## [1] Rcpp_1.0.4 lubridate_1.7.4 lattice_0.20-40
foreach_1.4.8 assertthat_0.2.1
## [6] digest_0.6.25 R6_2.4.1 cellranger_1.1.0 plyr_1.8.6
backports_1.1.5
## [11] reprex_0.3.0 evaluate_0.14 httr_1.4.1 blogdown_0.18
pillar_1.4.3
## [16] rlang_0.4.5 readxl_1.3.1 rstudioapi_0.11
rmarkdown_2.1 labeling_0.3
## [21] splines_3.6.1 munsell_0.5.0 broom_0.5.5
compiler_3.6.1 modelr_0.1.6
## [26] xfun_0.12 pkgconfig_2.0.3 shape_1.4.4 mgcv_1.8-31
htmltools_0.4.0
## [31] tidyselect_1.0.0 bookdown_0.18 codetools_0.2-16
fansi_0.4.1 crayon_1.3.4
## [36] dbplyr_1.4.2 withr_2.1.2 grid_3.6.1 nlme_3.1-145
jsonlite_1.6.1
## [41] gtable_0.3.0 lifecycle_0.2.0 DBI_1.1.0 magrittr_1.5
scales_1.1.0
## [46] cli_2.0.2 stringi_1.4.6 farver_2.0.3 fs_1.3.2
xml2_1.2.5
## [51] generics_0.0.2 vctrs_0.2.4 iterators_1.0.12
tools_3.6.1 glue_1.3.2
## [56] hms_0.5.3 yaml_2.2.1 colorspace_1.4-1 rvest_0.3.5
haven_2.2.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2020-06-29 21:23:55 CDT&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## sysname
## &amp;quot;Darwin&amp;quot;
## release
## &amp;quot;18.7.0&amp;quot;
## version
## &amp;quot;Darwin Kernel Version 18.7.0: Tue Aug 20 16:57:14 PDT
2019; root:xnu-4903.271.2~2/RELEASE_X86_64&amp;quot;
## nodename
## &amp;quot;Cara-Yijin-Zou.local&amp;quot;
## machine
## &amp;quot;x86_64&amp;quot;
## login
## &amp;quot;yijinzou&amp;quot;
## user
## &amp;quot;yijinzou&amp;quot;
## effective_user
## &amp;quot;yijinzou&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
