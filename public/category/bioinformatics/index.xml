<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bioinformatics | Cara (Yijin) Zou</title>
    <link>/category/bioinformatics/</link>
      <atom:link href="/category/bioinformatics/index.xml" rel="self" type="application/rss+xml" />
    <description>Bioinformatics</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Sat, 18 Jul 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>Bioinformatics</title>
      <link>/category/bioinformatics/</link>
    </image>
    
    <item>
      <title>Greedy Algorithm and Sequence Assembly</title>
      <link>/post/greedy_algorithm/</link>
      <pubDate>Sat, 18 Jul 2020 00:00:00 +0000</pubDate>
      <guid>/post/greedy_algorithm/</guid>
      <description>


&lt;p&gt;This post is used to illustrate a simple version of implementing the greedy algorithm for sequence assembly in python. Please keep in mind that there are many more complex and robust ways.&lt;/p&gt;
&lt;div id=&#34;greedy-algorithm&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Greedy Algorithm&lt;/h2&gt;
&lt;p&gt;Unlike other algorithms such as brute force of dynamic programming, the greedy algorithm may &lt;strong&gt;NOT&lt;/strong&gt; always give the optimum solution. Instead, it looks at the best short term gain without consideration for the end result. One example of an algorithm that uses the Greedy algorithm is Kruskal’s algorithm (Minimum Spanning Tree), however, in this case, it does give the optimal solution.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;sequencing&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Sequencing&lt;/h2&gt;
&lt;p&gt;One important tool used in biology is the sequencing of genetic data. There are various types of sequencing including sanger sequencing, illumina, nanopore, etc. Because techniques can be limited by read length, sometimes an original sequence/genome is fragmented, sequenced, and then assembled together again into a “contig” sequence (shot gun sequencing).&lt;/p&gt;
&lt;p&gt;For example, given the following:&lt;/p&gt;
&lt;p&gt;Genome: ATTCGTAGCA&lt;/p&gt;
&lt;p&gt;Copy:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  ATTCGTAGCA

  ATTCGTAGCA
  
  ATTCGTAGCA
  &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Fragmentation:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Frag1&lt;/th&gt;
&lt;th&gt;Frag2&lt;/th&gt;
&lt;th&gt;Frag3&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;ATT&lt;/td&gt;
&lt;td&gt;CGTA&lt;/td&gt;
&lt;td&gt;GCA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;ATTC&lt;/td&gt;
&lt;td&gt;GTA&lt;/td&gt;
&lt;td&gt;GCA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;AT&lt;/td&gt;
&lt;td&gt;TCGT&lt;/td&gt;
&lt;td&gt;AGCA&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;limitations&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Limitations&lt;/h2&gt;
&lt;p&gt;The shorter the reads, the harder it is to piece together (sometimes unsolvable). Another important factor to consider is if the original sequence has a lot of repeats such as &lt;em&gt;ATTAATTAA&lt;/em&gt; which will cause it to fail. We also have to assume that the sequence read was perfect (no errors in the reading of the base) and that all reads are bridged (there is some overlap).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Also, get all unique sequences (duplicates don’t offer more information)&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;sequence-assembly-using-the-greedy-algorithm&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Sequence Assembly Using the Greedy Algorithm&lt;/h2&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Search for overlaps and where you can extend this. If there is more than 1 sequence that overlaps, find the sequence overlap with the highest area of overlap.&lt;/li&gt;
&lt;li&gt;Find two fragments with largest overlap and merge fragments.&lt;/li&gt;
&lt;li&gt;Repeat until only 1 fragment is left.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following program was used to find the highest number of overlapping characters in two sequences, making sure that the match isn’t in the middle of the two sequences such as “AT&lt;strong&gt;GCG&lt;/strong&gt;TA” and “GAC&lt;strong&gt;GCG&lt;/strong&gt;GGC”. Keep in mind that this program finds overlaps with the potential of left overhangs on the first sequence and right overhangs on the second sequence and &lt;strong&gt;NOT&lt;/strong&gt; vice versa. For example: “AGC&lt;strong&gt;TTA&lt;/strong&gt;” and “&lt;strong&gt;TTA&lt;/strong&gt;CCC”.
&lt;em&gt;(Probably not the most efficient way of doing it)&lt;/em&gt;&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;def find_high_overlap(string1_original, string2_original):
  
  string1 = string1_original 
  string2= (len(string1_original)-1)* &amp;quot; &amp;quot; + string2_original 
  
  highest_overlap=0
  
  for k in range (len(string1_original)):
    overlap_num=0
    #check individual characters to see if they match 
    for i in range(len(string1)):
      overlap_num=0
      if string1[i]==string2[i]:
        for w in range(i, len(string1)):
            if string1[w]==string2[w]:
              overlap_num+=1
            else:
                overlap_num=0
                break
      #if the match is in the middle of the sequences
      elif string1[i]!=&amp;quot; &amp;quot; and string2[i]!=&amp;quot; &amp;quot;:
          overlap_num=0
          break
      if overlap_num &amp;gt; highest_overlap:
        highest_overlap = overlap_num
    if overlap_num &amp;gt; highest_overlap:
      highest_overlap = overlap_num
    string2= string2[1:]+&amp;quot; &amp;quot;
  
  return (highest_overlap)

find_high_overlap(&amp;quot;ATGGCGAGC&amp;quot;,&amp;quot;GAGCATGGCGAGC&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 4&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;find_high_overlap(&amp;quot;GAGCATGGCGAGC&amp;quot;,&amp;quot;ATGGCGAGCCCAA&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 9&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Okay, so now that we have a way of determining the repeats, now what? We need to build a n by n &lt;strong&gt;matrix&lt;/strong&gt; where &lt;em&gt;n&lt;/em&gt; is the number of fragments that we have. The value in the _i_th row and _j_th column is the overlap between the _i_th fragment and the _j_th fragment. Ignoring the diagonal from the top left to the bottom right, find the highest overlap (obviously a sequence will have the most overlap with itself). Once you find the two with the highest overlap (if more than two pairs, randomly pick a pair), merge/extend the pair into one fragment and change your matrix so that you have a n-1 by n-1 &lt;strong&gt;matrix&lt;/strong&gt;. Continue doing this until there is only 1 fragment.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This is NOT the only way of solving this problem. As found in the references, you can also use a graph for example,where the node represents the fragment and the edge represents the number of highest overlap.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Before actually using the greedy algorithm to solve this problem, we must first build a program that merges two fragments together:
&lt;em&gt;This will assume that the overlap was found with the program above– no overlapping only in the middle of the two sequences, left overhangs on the first sequence, and right overhangs on the second sequence.&lt;/em&gt;&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;def merge(string1_original, string2_original, found_overlap):
  
  string1 = string1_original 
  string2= (len(string1_original)-1)* &amp;quot; &amp;quot; + string2_original 
  
  for k in range (len(string1_original)):
    overlap_num=0
    #check individual characters to see if they match 
    for i in range(len(string1)):
      overlap_num=0
      if string1[i]==string2[i]:
        for w in range(i, len(string1)):
            if string1[w]==string2[w]:
              overlap_num+=1
            else:
                overlap_num=0
                break
        if overlap_num == found_overlap:
          #count the number of left spaces in the second sequence
          spaces=0
          for j in range(len(string2)): 
            if string2[j]==&amp;quot; &amp;quot;:
              spaces+=1
            else:
              break
          merged_String= string1[:spaces]+string2[spaces:]
          
          return (merged_String.strip())
    string2= string2[1:]+&amp;quot; &amp;quot;

merge(&amp;quot;ATGGCGAGC&amp;quot;,&amp;quot;GAGCATGGCGAGC&amp;quot;, 4)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;ATGGCGAGCATGGCGAGC&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;merge(&amp;quot;GAGCATGGCGAGC&amp;quot;,&amp;quot;ATGGCGAGCCCAA&amp;quot;, 9)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;GAGCATGGCGAGCCCAA&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now let’s actually make the matrix:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;def no_merges(matrix_1): 
  for row in range(len(matrix_1)):
    for col in range(len(matrix_1)):
      if matrix_1[row][col]&amp;gt;0: 
        return False
  return True 


def sequence_assembly(frag_list): 
  #keep looping until only one fragment is left 
  for frag in range(len(frag_list)-1): 
    seq_matrix = []
    for item in frag_list:  
      seq_matrix.append(len(frag_list) * [0])
    
    for row in range(len(seq_matrix)): 
      for col in range(len(seq_matrix)):
        #the diagonal is how much it overlaps with itself (not useful)
        if row==col: 
          seq_matrix[row][col]=-1
        else: 
          seq_matrix[row][col]=find_high_overlap(frag_list[row], frag_list[col])
    
    print(&amp;quot;Matrix after&amp;quot;, frag, &amp;quot;merges&amp;quot;)
    prettyPrint(seq_matrix)
    if no_merges(seq_matrix)==True: 
      print(&amp;quot;Cannot merge all&amp;quot;)
      return(frag_list)
    #find the highest overlap (if they overlap the same amount, this code just takes the first one it encounters)
    highest= [0]
    for i in range(len(seq_matrix)):
      for j in range(len(seq_matrix)):
        if seq_matrix[i][j]&amp;gt; highest[0]:
          highest[0]=seq_matrix[i][j]
          if len(highest)&amp;gt;1:
            highest[1]=i
            highest[2]=j
          else: 
            highest.extend([i,j])
    #print(highest)
    seq1=frag_list[highest[1]]
    seq2=frag_list[highest[2]]
    
    frag_list.append(merge(seq1,seq2, highest[0]))
    frag_list.remove(seq1)
    frag_list.remove(seq2)
    
  return (frag_list)

frag_list=[&amp;quot;GAGCATGGCGAGC&amp;quot;,&amp;quot;ATGGCGAGCCCAA&amp;quot;,&amp;quot;ATGGCGAGC&amp;quot;,&amp;quot;CAATGCACCA&amp;quot;]
sequence_assembly(frag_list)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Matrix after 0 merges
##   -1     9     9     1  
##    0    -1     1     3  
##    4     9    -1     1  
##    0     1     1    -1  
## 
## Matrix after 1 merges
##   -1     1     4  
##    1    -1     0  
##    1     3    -1  
## 
## Matrix after 2 merges
##   -1     1  
##    3    -1  
## 
## [&amp;#39;ATGGCGAGCATGGCGAGCCCAATGCACCA&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;frag_list_2=[&amp;quot;ATGGCGAGC&amp;quot;,&amp;quot;CAATGCACCA&amp;quot;, &amp;quot;GAGCATGGCGAGC&amp;quot;,&amp;quot;ATGGCGAGCCCAA&amp;quot;]
sequence_assembly(frag_list_2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Matrix after 0 merges
##   -1     1     4     9  
##    1    -1     0     1  
##    9     1    -1     9  
##    1     3     0    -1  
## 
## Matrix after 1 merges
##   -1     0     1  
##    1    -1     9  
##    3     0    -1  
## 
## Matrix after 2 merges
##   -1     0  
##    3    -1  
## 
## [&amp;#39;GAGCATGGCGAGCCCAATGCACCA&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As demonstrated in the above example, the following fragments: “GAGCATGGCGAGC”,“ATGGCGAGCCCAA”,“ATGGCGAGC”,“CAATGCACCA” can be used to form the longer sequence. However, depending on the order of the sequences submitted, the resulting longer sequence can be different: ‘ATGGCGAGCATGGCGAGCCCAATGCACCA’, ‘GAGCATGGCGAGCCCAATGCACCA’, etc. Why? Because as stated previously, if there is more than 1 pair of sequences that overlap the highest number of character overlaps, my program takes the first one it encounters–therefore order matters in this case.&lt;/p&gt;
&lt;p&gt;There may also be cases where the greedy algorithm cannot merge all of the fragments into one:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;sequence_assembly([&amp;quot;ACGGAAATAC&amp;quot;, &amp;quot;ATCAGGT&amp;quot;, &amp;quot;GGTAAAG&amp;quot;])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Matrix after 0 merges
##   -1     0     0  
##    0    -1     3  
##    0     0    -1  
## 
## Matrix after 1 merges
##   -1     0  
##    0    -1  
## 
## Cannot merge all
## [&amp;#39;ACGGAAATAC&amp;#39;, &amp;#39;ATCAGGTAAAG&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;AN INTRODUCTION TO BIOINFORMATICS ALGORITHMS, NEIL C. JONES AND PAVEL A. PEVZNER&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://data-science-sequencing.github.io/Win2018/lectures/lecture6/#&#34; class=&#34;uri&#34;&gt;http://data-science-sequencing.github.io/Win2018/lectures/lecture6/#&lt;/a&gt;:~:text=The%20greedy%20algorithm%20assembles%20the%20reads%20into%20an%20incorrect%20DNA,greedy%20approach%20can%20still%20fail.&amp;amp;text=One%20can%20think%20of%20the,looking%20for%20length%2D%E2%84%93%20overlaps.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ocw.mit.edu/courses/biology/7-91j-foundations-of-computational-and-systems-biology-spring-2014/lecture-slides/MIT7_91JS14_Lecture6.pdf&#34; class=&#34;uri&#34;&gt;https://ocw.mit.edu/courses/biology/7-91j-foundations-of-computational-and-systems-biology-spring-2014/lecture-slides/MIT7_91JS14_Lecture6.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>PyMOL Scripting</title>
      <link>/post/pymol_scripting/</link>
      <pubDate>Mon, 29 Jun 2020 00:00:00 +0000</pubDate>
      <guid>/post/pymol_scripting/</guid>
      <description>


&lt;div id=&#34;pymol&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;PyMOL&lt;/h2&gt;
&lt;div id=&#34;brief-introduction-what-is-pymol&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Brief Introduction: What is PyMOL?&lt;/h3&gt;
&lt;p&gt;PyMOL is a molecular visualization software used for 3D depictions of molecules such as proteins, nucleic acids, etc. You can download the software here: &lt;a href=&#34;https://pymol.org/2/&#34;&gt;https://pymol.org/2/&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;why-do-scripting-and-not-just-use-the-graphical-interface&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Why do scripting and not just use the graphical interface?&lt;/h3&gt;
&lt;p&gt;While the graphical interface can seem less daunting and has less of a learning curve, scripting allows you to go back and change certain details that may be difficult just using the graphical interface.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;how-do-i-create-a-script&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;How do I create a script?&lt;/h3&gt;
&lt;p&gt;In PyMOL, go to file –&amp;gt; log file –&amp;gt; Open. Name your new script and save as a .pml. You can start typing commands in PyMOL and your actions will be recorded. To stop recording, go to log file –&amp;gt; Close. To run this script later on, go to run script and find the file. You always open the .pml in a text editor and change commands later.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;how-to-approach-hopefully-helpful-tips&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;How to approach/ (Hopefully) Helpful tips&lt;/h3&gt;
&lt;p&gt;Having a pymol “cheat sheet” can aslo be extremely helpful. Here are some key details that I find to be useful. These are just some functions that I think are important, for more information, here is the &lt;a href=&#34;https://pymolwiki.org/&#34;&gt;pymol wiki&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&#34;setting-up-the-interface&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Setting up the interface&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;bg white&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;hide nonbonded # hides water molecules&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;set seq_view, 1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;loading-in-a-proteins&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Loading in a protein(s)&lt;/h4&gt;
&lt;p&gt;Sometimes, it can appear that the script works fine when manually inputting lines one by one but when running an entire script, it fails to run. In this case, it is important to use the async=0 so that PyMOL understands to pause until the protein(s) has loaded before proceeding. Also something to note, currently, when fetching directly from PyMOL, files download as a .CIF instead of a .PDB. You can change this by adding type=pdb.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;fetch 3lwb, type=pdb, async=0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;simple-self-explanatory-functions&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Simple (self-explanatory) functions&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;zoom resn EDO&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;show sticks, hyfo&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;show spheres, 3lwb_active_water&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;color orange, hyfo&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;orient 3lwb&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;no-ctrlz-undo&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;No Ctrl+Z (Undo)&lt;/h4&gt;
&lt;p&gt;Something I find really annoying about PyMOL is that undo doesn’t really work (this is also why I think pymol scripting is so great). Previously, I always kept saving sessions because I was afraid of losing progress (which you should still do, just in case). Something else that I recently found out about is using scenes. It acts like a snapshot in a moment in time. You can switch between different scenes that you saved and you can also use these scenes to create movies. Scenes are great because you can go back to a certain scene and work based on that if you messed up in the GUI. However, it is also important to note that some functions such as mutagenesis are still permanent in that it will change previous scenes as well.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;scene 001, store #save scene&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;save 3lwb_v1.pse #save session&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;select-and-rename-objects&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Select (and Rename) Objects&lt;/h4&gt;
&lt;p&gt;select chosen_name, resn actual_name&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sele protein, chain A - resn HOH&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;select ADP, (1iow &amp;amp; resn ADP)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;select backbone, name CA+N+C+O&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;sele active_site, resi 122+120+189+208+250+124&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;select hyfo, resn ala+gly+val+ile+leu+phe+met&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;labelling&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Labelling&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;label (resi 330 &amp;amp; n;cg &amp;amp;! 1iow),“%s-%s” % (resn,resi)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;label (ADP &amp;amp; n;o3a), “ADP”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;label (resn MG), “Magnesium”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;booleans&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Booleans&lt;/h4&gt;
&lt;p&gt;Reviewing booleans for “and”, “or”, “not” can be helpful when selecting molecules.
For example:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;select 3lwb_active_water, ((ligands) around 3.2) and (resn HOH) &amp;amp; ! 1iow&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;alter-and-rebuild&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Alter and Rebuild&lt;/h4&gt;
&lt;p&gt;When changing the size of spheres, it may be necessary to rebuild the view in order to see the change.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;alter Magnesium, vdw = 0.7&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;rebuild&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;acronyms&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Acronyms&lt;/h4&gt;
&lt;p&gt;Other than just practicing, I think the biggest help for learning scripting is learning what the acronyms and certain key words mean.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;What it means&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;util.cbag&lt;/td&gt;
&lt;td&gt;Utility color by atom (color first letter)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;resn ALA&lt;/td&gt;
&lt;td&gt;Residue name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;resi 100&lt;/td&gt;
&lt;td&gt;Residue identifier&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;id&lt;/td&gt;
&lt;td&gt;Column number in PDB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;byres&lt;/td&gt;
&lt;td&gt;By complete residue (also byobject, bychain, etc.)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;within-vs-around&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Within VS Around&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;sele active, byres all within 5 of ligands&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Within&lt;/strong&gt; also selects the ligands as part of the active site. If you want to select active site residues not including the ligands you can use &lt;strong&gt;around&lt;/strong&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;select active, byres (ligand around 5)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;take-high-quality-picture&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Take high quality picture&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;ray&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;png 3lwbRay.png&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;distance&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Distance&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;distance hbonds_ligands, ligands, 3lwb_active, 3.2, mode=2&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;hide labels, hbonds_ligands&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;color black, hbonds_ligands&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;atom-names&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Atom names&lt;/h4&gt;
&lt;p&gt;When selecting individual atoms it can be helpful to understand this notation: “n;ca”.
This refers to name carbon alpha (and so on for beta, gamma, delta, etc.).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;superimposing&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Superimposing&lt;/h4&gt;
&lt;p&gt;The first will move to superimpose on the second structure.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;super 1iow, 3lwb&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>PAX9 Variants Random Forest Model</title>
      <link>/project/pax9_rf/</link>
      <pubDate>Fri, 08 May 2020 00:00:00 +0000</pubDate>
      <guid>/project/pax9_rf/</guid>
      <description>


&lt;div id=&#34;predicting-the-effect-of-pax9-variants-using-a-random-forest-model&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Predicting the Effect of PAX9 variants using a Random Forest Model&lt;/h2&gt;
&lt;div id=&#34;abstract&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Abstract&lt;/h3&gt;
&lt;p&gt;Pax9 is a gene belonging to the family of paired-box genes that encode transcription factors involved in organogenesis. Defects in Pax9 can lead to various types of cancer as well as a condition known as oligodontia which causes missing teeth in individuals. A random forest model was used to predict the phenotypic effect of variants of PAX9. Features that were used include: location of mutation, type of mutation, CADD score, protein change (BLOSUM80 score), and in-frame/out of frame mutation. A 10-fold cross validation was conducted to ensure that the model was not overfitting. The resulting random forest model had an 84.0% prediction accuracy, in which the sensitivity was 89.5%, the specificity was 90.9%, and the precision was 89.5%. However, due to the small size of the available data there are many limitations to the model and involving other features such as other gene interactions would be a major direction of future research on the PAX9 gene.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;introductionbackground&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Introduction/Background&lt;/h3&gt;
&lt;p&gt;The PAX9 gene belongs to the family of paired box genes (PAX), which are highly conserved across species. It is located on chromosome 14 and codes for a transcription factor which plays a key role in fetal development. Mutations in the PAX9 gene can lead to different types of cancers (especially lung cancer) as well as oligodontia, a congenital defect of more than 6 missing teeth, especially the molars.The members of the PAX gene family usually consist of a paired-type homeodomain, an octapeptide and a paired box domain. The paired box domain is responsible for binding to DNA to facilitate transcription and is one of our major interests to examine whether a mutation in the gene encoding this structure can be an indication of potential cancer or tooth agenesis phenotype. There are five exons that make up the gene transcript for PAX9. The two most important exons for our project include exon 2 (37130902-37131298), which contains four nucleotides including the start codon, as well as exon 3 (37132102-37132728) which contains the majority of the paired box domain.&lt;/p&gt;
&lt;p&gt;The features used by the random forest model includes: location of mutation, type of mutation, CADD score, protein change (BLOSUM80 score), and in-frame/out of frame mutation. The location of the mutation was important because preliminary analysis using a chi-squared test determined that the location of the mutation (in the paired box region or not) is not independent to whether an individual exhibits oligodontia. Additionally, many of the features were chosen based on known biological information of genes/proteins. Type of mutation and in frame/out of frame mutation were chosen because synonymous mutations are likely to have little deleterious effect while missense and nonsense mutations are likely to cause a more significant effect on the gene product. Insertions and deletions are likely to cause the most effect on the gene since this can cause a frameshift and thus affect all subsequent amino acids. The effect of the protein change was quantified using a higher valued BLOSUM (BLOSUM80) which is used for closely related sequences as some amino acid changes are more detrimental than others. Finally, CADD score was used as it has a similar objective to our model (predicting the effect of variants) and including other similar models will hopefully improve the ability of our model.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;objective&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Objective&lt;/h3&gt;
&lt;p&gt;Utilizing a random forest to classify whether a PAX9 gene variant is pathogenic with the gene data from ClinVar, cBioPortal and gnomAD.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;data-sources&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Data Sources&lt;/h3&gt;
&lt;p&gt;The pathogenic variants were found using cBioPortal (&lt;a href=&#34;https://www.cbioportal.org/&#34; class=&#34;uri&#34;&gt;https://www.cbioportal.org/&lt;/a&gt;) which contained known variants that cause cancer. Pathogenic variants were also identified from the ClinVar database (&lt;a href=&#34;https://www.ncbi.nlm.nih.gov/clinvar/&#34; class=&#34;uri&#34;&gt;https://www.ncbi.nlm.nih.gov/clinvar/&lt;/a&gt;) which consists of variants and their corresponding phenotype/condition. ClinVar largely contained variants that resulted in tooth agenesis. If the clinical significance was labelled as “benign” or “likely benign”, they were excluded from the positive variants dataset. It must be noted that there is a risk using ClinVar since there are more lenient standards for submitting data onto the database.&lt;/p&gt;
&lt;p&gt;The negative variants were extracted from gnomAD (&lt;a href=&#34;https://gnomad.broadinstitute.org/&#34; class=&#34;uri&#34;&gt;https://gnomad.broadinstitute.org/&lt;/a&gt;) which is an aggregation of genome sequencing data. Although variants from individuals that are affected by severe pediatric disease as well as their first degree relatives were removed, there may still be some individuals affected by severe disease still included. Therefore, this is not a true reference set of alleles. To remove some known disease variants, any overlap between gnomAD and the pathogenic variants were removed from the gnomAD dataset provided that the allele frequency was less than 0.05.&lt;/p&gt;
&lt;p&gt;All variants were relative to the GRCh37 reference genome (NG_013357.1).
### Computational Methods
Various R packages were used including ‘tidyverse’ and ‘ggplot2’ for manipulating the data as well as ‘peptider’ which contained the BLOSUM80 matrix. The ‘randomForest’ package provided the model for machine learning.&lt;/p&gt;
&lt;p&gt;The Ensembl Variant Effect Predictor (VEP) was used to obtain the protein consequence for the ClinVar data while the other two datasets already included protein consequence. A VCF file was produced using the results of VEP and was used to obtain the PHRED score from Combined Annotation Dependent Depletion (&lt;a href=&#34;https://cadd.gs.washington.edu/&#34; class=&#34;uri&#34;&gt;https://cadd.gs.washington.edu/&lt;/a&gt;) which predicts the deleteriousness of a single nucleotide change as well as insertions and deletions.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;results&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Results&lt;/h3&gt;
&lt;div id=&#34;variant-selection&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;Variant Selection&lt;/h5&gt;
&lt;p&gt;Since there are a lot more variants from gnomAD that are neutral phenotype compared to the number of pathogenic variants, an unbalanced data would form if all of the datasets were included. To combat this, we sampled an equal number of variants that are diseased/not diseased each time we trained our model. Additionally, we used the ten-fold cross validation to make sure that the data is not overfit.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;features&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;Features&lt;/h5&gt;
&lt;p&gt;Allele frequency was originally a feature, however, ClinVar did not contain allele frequency and any attempts at obtaining allele frequency using the Ensembl allele frequency calculator were not successful because it only retrieves information for variants identified from the 1000 Genomes Project. While the cBioPortal dataset did have allele frequency, this was the frequency of a cancerous cell with the PAX9 variant out of all the biopsy samples which was not directly comparable to the gnomAD allele frequency value which is in reference to the entire population. Therefore, this feature was removed.&lt;/p&gt;
&lt;div id=&#34;gene-location&#34; class=&#34;section level6&#34;&gt;
&lt;h6&gt;Gene Location&lt;/h6&gt;
&lt;p&gt;The feature ‘gene location’ was derived from all the variant positions (only using the starting position for convenience) on the chromosome in reference to the human genome GRCh37. The classification of position was built up according to the UCSC genome browser with reference sequence NM_006194. Additionally, we enriched the classification result via the usage of the NCBI analysis on NM_006194.3 since USCS genome browser only provided the exon position. As a result, categories in this feature include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;5’ UTR (37126773-37,131,294) (covering all the exon 1 and majority of exon 2)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Start codon region (37131295-37131298) (at the very end of exon 2)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Exon 3 (37132102-37132728) (contain PAI, RED and KDM5B)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PAI (37132116-37132286)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;RED (37132341-37132487)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;KDM5B (37132599-37132664)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Exon 4 (37135667-37135806)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Exon 5 (37145403-37145657)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3’ UTR (37,145,658-37147011)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Intron (parts outside of the above regions)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;paired-box-region&#34; class=&#34;section level6&#34;&gt;
&lt;h6&gt;Paired box region&lt;/h6&gt;
&lt;p&gt;The PAI stands for paired-box region, which encodes a structure for the PAX9 transcription factor to bind to DNA molecules. The RED subdomain aids and corrects PAI’s recognition of DNA sites, and its variant number is larger than PAI, which might account for why PAX proteins have different target genes. The KDM5B protein helps transcriptional repression of some tumor suppressor gene.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;blosum80-amino-acid-conservation&#34; class=&#34;section level6&#34;&gt;
&lt;h6&gt;BLOSUM80 (amino acid conservation)&lt;/h6&gt;
&lt;p&gt;The BLOSUM80 score displayed the extent of effect of amino acid change on the stability of the PAX9 protein. We expected that this feature would greatly improve the prediction of our model. R package ‘peptider’ was used to obtain the BLOSUM80 matrix. However, the substitution matrix only considered single amino acid change, so we assumed that variants with a replacement length over one (such as a deletion, frameshift, etc) would get the lowest score since they are more likely to have deleterious effects on the protein structure.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;mutation-type&#34; class=&#34;section level6&#34;&gt;
&lt;h6&gt;Mutation Type&lt;/h6&gt;
&lt;p&gt;For the feature of mutation type, it was determined from the original data for gnomAD and cBioPortal. The ClinVar data was processed via VEP to acquire the result. Using the mutation feature and BLOSUM80 matrix, we were able to further classify the data into whether it was in-frameshift and out-of-frame shift since it was expected that frameshift mutation would likely to generate abnormal protein.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;cadd-phred-score&#34; class=&#34;section level6&#34;&gt;
&lt;h6&gt;CADD PHRED score&lt;/h6&gt;
&lt;p&gt;CADD PHRED score was obtained by using the coordinates of variants and submitting to VEP. The result produced a VCF file that was submitted to CADD. Some variants such as fusion proteins did not have a CADD score and were given an estimated CADD score ( in this particular case, maximum CADD score was used in replacement) which may not have reflected its true deleteriousness effect.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;pathogenicity&#34; class=&#34;section level6&#34;&gt;
&lt;h6&gt;Pathogenicity&lt;/h6&gt;
&lt;p&gt;Finally, for the pathogenicity feature–which was our goal of RF prediction–due to the missing allele frequency in most of the cBioPortal and ClinVar it would be nearly impossible to precisely know which variant was neutral or not. Thus, we had to assume that all ClinVar and cBioPortal variants were pathogenic while all gnomAD variants were neutral (after filtering for duplicates) for convenience.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;random-forest&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;Random Forest&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
##  randomForest(formula = phenotype ~ ., data = training_data, importance = T,      ntree = 20, na.action = na.exclude) 
##                Type of random forest: classification
##                      Number of trees: 20
## No. of variables tried at each split: 2
## 
##         OOB estimate of  error rate: 14.44%
## Confusion matrix:
##            neutral pathogenic class.error
## neutral         75         15   0.1666667
## pathogenic      11         79   0.1222222&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The RF model showed that it had an overall accuracy of 85.56%, with 20 decision trees for doing classification tasks. The low value of tree number was due to the limited training data size (80).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;##                 neutral pathogenic MeanDecreaseAccuracy MeanDecreaseGini
## GRCh37Location 6.496823   9.856697             9.376161       25.2817657
## gene_location  1.924800   3.587758             4.798873        8.1996621
## BLOSUM         4.423561   7.614464             6.227631       17.4672859
## Mutation_Type  2.271270   2.648797             2.938764       13.3248609
## inframe        1.025978   0.000000             1.025978        0.4994845
## PHRED          3.754689   1.829102             3.861181       19.7613239&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/PAX9_RF_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;672&#34; /&gt;
Based on the variable importance plot above, the most important variable would be the location relative to the reference GRCh37. On the other hand, the variable with the smallest effect on the predicting power of our model is inframe. This is expected since there were relatively few variants that caused a frame shift in the population.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ten-fold-cross-validation&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;Ten-fold Cross Validation&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;##                           1         2         3         4         5         6
## ten_fold_accuracy 0.8888889 0.7777778 0.8888889 0.8888889 0.7777778 0.8888889
##                           7         8         9        10
## ten_fold_accuracy 0.8333333 0.9444444 0.8888889 0.8888889&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Cross Validation mean accuracy:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.8666667&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By comparing the accuracy between RF (85.56%) and ten-fold (86.67%), we found that despite the low sample size, the model exhibited limited overfitting.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;prediction-result&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;Prediction Result&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;##             prediction_result
## truth        neutral pathogenic Sum
##   pathogenic       5         17  22
##   neutral         20          2  22
##   Sum             25         19  44&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##             accuracy sensitivity specificity precision
## pathogenic 0.8409091   0.8947368   0.9090909 0.8947368&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;From the confusion matrix, the model has relatively good accuracy, sensitivity, specificity, and precision.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusion&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;The objective of the project was to build a random forest model to predict the phenotype of a PAX9 gene variant. The ten-fold cross validation indicated that the model didn’t overfit. While the prediction result was satisfactory, it is important to note that it is only as good as the available training data. It is again acknowledged that there was a risk associated with using the ClinVar resource due to its relatively loose quality check. Additionally, since a large proportion of the allele frequency in cBioPortal and ClinVar was missing, it was difficult to identify all the potential neutral variants and all the variants were assumed to be pathogenic in order to run the RF model. Hence, if possible, allele frequency could potentially be an important feature of any future research on PAX9 gene. Another improvement would be to increase the very limited online human PAX9 gene data to generate more powerful machine learning models. To further refine the prediction of the RF model, a suggestion may be to use the continuous conservation score from other available tools as highly conserved sequences are likely less tolerant to changes. Although BLOSUM80 was insightful on the effect of amino acid substitution on protein structure, adding conservation score could provide a more comprehensive information. Lastly, future research may have a stronger focus on the PAX9’s metabolic pathway. This gene plays a principal role in organogenesis and interacts with many other genes so it is unfortunate that this gene hasn’t received the same attention as other popular genes like p53.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Bonczek et al, ‘PAX9 gene mutations and tooth agenesis: A review’, Clinical Genetics, 2017/02/01, doi: 10.1111/cge.12986.
&lt;a href=&#34;https://www.researchgate.net/publication/313264549_PAX9_gene_mutations_and_tooth_agenesis_A_review&#34; class=&#34;uri&#34;&gt;https://www.researchgate.net/publication/313264549_PAX9_gene_mutations_and_tooth_agenesis_A_review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;UCSC genome browser on PAX9. &lt;a href=&#34;http://www.genome.ucsc.edu/cgi-bin/hgc?hgsid=828585015_qsdofxT4g0z4a48R33zLnyqdtxND&amp;amp;g=htcCdnaAliInWindow&amp;amp;i=NM_006194&amp;amp;c=chr14&amp;amp;l=37126772&amp;amp;r=37147011&amp;amp;o=37126772&amp;amp;aliTable=refSeqAli&amp;amp;table=refGene&#34; class=&#34;uri&#34;&gt;http://www.genome.ucsc.edu/cgi-bin/hgc?hgsid=828585015_qsdofxT4g0z4a48R33zLnyqdtxND&amp;amp;g=htcCdnaAliInWindow&amp;amp;i=NM_006194&amp;amp;c=chr14&amp;amp;l=37126772&amp;amp;r=37147011&amp;amp;o=37126772&amp;amp;aliTable=refSeqAli&amp;amp;table=refGene&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;NCBI data on PAX9: &lt;a href=&#34;https://www.ncbi.nlm.nih.gov/nuccore/NM_006194#feature_NM_006194.3&#34; class=&#34;uri&#34;&gt;https://www.ncbi.nlm.nih.gov/nuccore/NM_006194#feature_NM_006194.3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pellizzari et al. Co-operation between the PAI and RED subdomains of Pax-8 in the interaction with the thyroglobulin promoter. Biochem J. 1999;337 ( Pt 2)(Pt 2):253‐262.
&lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC1219959/&#34; class=&#34;uri&#34;&gt;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC1219959/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;KDB5B gene: &lt;a href=&#34;https://www.genecards.org/cgi-bin/carddisp.pl?gene=KDM5B&#34; class=&#34;uri&#34;&gt;https://www.genecards.org/cgi-bin/carddisp.pl?gene=KDM5B&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ensembl Variant Effect Predictor (VEP): &lt;a href=&#34;https://useast.ensembl.org/info/docs/tools/vep/index.html&#34; class=&#34;uri&#34;&gt;https://useast.ensembl.org/info/docs/tools/vep/index.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Combined Annotation Dependent Depletion (CADD): &lt;a href=&#34;https://cadd.gs.washington.edu/&#34; class=&#34;uri&#34;&gt;https://cadd.gs.washington.edu/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;cBioPortal: &lt;a href=&#34;https://www.cbioportal.org/&#34; class=&#34;uri&#34;&gt;https://www.cbioportal.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ClinVar:&lt;a href=&#34;https://www.ncbi.nlm.nih.gov/clinvar/&#34; class=&#34;uri&#34;&gt;https://www.ncbi.nlm.nih.gov/clinvar/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;gnomAD: &lt;a href=&#34;https://gnomad.broadinstitute.org/&#34; class=&#34;uri&#34;&gt;https://gnomad.broadinstitute.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Random Forest: A. Liaw and M. Wiener (2002). Classification and Regression by randomForest. R News 2(3), 18–22.&lt;/li&gt;
&lt;li&gt;Tidyr package: Hadley Wickham and Lionel Henry (2020). tidyr: Tidy Messy Data. R package; version 1.0.2. &lt;a href=&#34;https://CRAN.R-project.org/package=tidyr&#34; class=&#34;uri&#34;&gt;https://CRAN.R-project.org/package=tidyr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Peptider package: Heike Hofmann, Eric Hare and GGobi Foundation (2015). peptider: Evaluation of Diversity in Nucleotide Libraries. R package version 0.2.2. &lt;a href=&#34;https://CRAN.R-project.org/package=peptider&#34; class=&#34;uri&#34;&gt;https://CRAN.R-project.org/package=peptider&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Dplyr package: Hadley Wickham, Romain François, Lionel Henry and Kirill Müller (2020). Dplyr: A Grammar of Data Manipulation. R package version 0.8.5. &lt;a href=&#34;https://CRAN.R-project.org/package=dplyr&#34; class=&#34;uri&#34;&gt;https://CRAN.R-project.org/package=dplyr&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Hidden Markov Model</title>
      <link>/post/hidden_markov_model/</link>
      <pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate>
      <guid>/post/hidden_markov_model/</guid>
      <description>


&lt;div id=&#34;hidden-markov-model&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Hidden Markov Model&lt;/h1&gt;
&lt;p&gt;I go over the basics of a Markov Chain &lt;a href=&#34;../Markov_chain&#34;&gt;here&lt;/a&gt;, however, unlike chutes and ladders, for a hidden markov model, there is hidden information. In this case the markov chain is not visible to us, we can only observe outcome values.&lt;/p&gt;
&lt;p&gt;Like a markov chain, there are still &lt;strong&gt;states&lt;/strong&gt; (now hidden), &lt;strong&gt;transition probabilities&lt;/strong&gt;, and &lt;strong&gt;initial probabilities&lt;/strong&gt;. However, in addition to this, we also have an &lt;strong&gt;observed state&lt;/strong&gt; and an &lt;strong&gt;emission probability&lt;/strong&gt;.&lt;/p&gt;
&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; version=&#34;1.1&#34; width=&#34;751px&#34; viewBox=&#34;-0.5 -0.5 751 441&#34; content=&#34;&amp;lt;mxfile host=&amp;quot;app.diagrams.net&amp;quot; modified=&amp;quot;2020-07-02T17:47:17.085Z&amp;quot; agent=&amp;quot;5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36&amp;quot; etag=&amp;quot;IwPpH-5e6uUfPe3D6aqo&amp;quot; version=&amp;quot;13.3.5&amp;quot; type=&amp;quot;device&amp;quot;&amp;gt;&amp;lt;diagram id=&amp;quot;C5RBs43oDa-KdzZeNtuy&amp;quot; name=&amp;quot;Page-1&amp;quot;&amp;gt;7Vxbk5pIFP41PsaiLyA+RjMz2c1uNrtmd3aeUkRapQZtt8FR8+u3GRqB7lbQEdBgpSpFX2joc/nOdw7tdNBwvnlgznL2O3WJ34GGu+mgDx0I+9ji/0cd27jDBHbcMWWeG3eBtGPk/SCi0xC9K88lQW5iSKkfest855guFmQc5vocxug6P21C/fxTl86UKB2jseOrvY+eG87iXhv20v6PxJvOkicDqx+PzJ1ksthJMHNcus50obsOGjJKw/hqvhkSP5JdIpfHX7aP/m/P1sOvfwb/OX8PPn39/M+7eLH7Y27ZbYGRRXjepYUUXhx/JeT1mYQT39uILYfbRI6MrhYuidYCHTRYz7yQjJbOOBpdc8PhfbNw7ovhCV2EwhQAl9Ng6jtBpEeDXwcho887XUSzd4KNhiee7w+pT9nrY9Hg9R/vLykDIasXwkKyyViAkMkDoXMSsi2fIkZxX6hX2DfEor1OrQUkJjDLWEoyzxEGOt0tnSqBXwg9HKNuoChl5BOybI1KwOWpBCoq+ciXXlP23BqtIJzXCurVqBUU3OHFwJzNBi8j9unr9psz+UPgXVYpijLIwn0fBRHeGkei9cZ5+XMZse2/kUS7ZtJ8yo592Ahxx61t0tp4YeY23nrKjKQ3RY3knvjliKvEq3KaCuiKjUkJIw0dNiWHFuzp9ZzRo6lRY9LHiO+E3kt+Ezrdiid8oR7fXmpGknMjUzKPeJ/irmw8kxbCsj0a0kKxHJSFXk1tt+3TrU9FaaOLFQPkzhXmTS5268RzF3RBJGcWXY7vTReR3XLrILx/ELmqx4nNezEw91w3eowWY1IUSk1P8fWyxrc/eO7TQcaWsMaWYFWQoOJ0bZDwRvcu9FqwRxX1uC029qD/tbkturktRPDC3BYXu+14xV52rKrIh9/ki025mIn20N5jXczsSQuhci7GRepsM9OW0YTgwAsD6TnAOPxe0gaBXTDfOnK+Lb2PkZvPL+IdnhVPTA2emC3DEyjhCTAbxhPrDDRAMPzk+inH9vUMP6UOWeKQ4RHVUIfizKAsx7hlBueABLWoZnQTVbUFElAP57FYUy2oFRLsG8VQgfpkigGteigGNI6jGEokKqAMO8GWnS9TqzooRv980czowmzBCpQMZ+KuXUS7lngWl8QaC2gSH0XgRG9DkpUiq96Apil/ty9pliEPoYYjGtCVMqyWaUXJKZtOPUCJWsYRJUg7j7zvjK5RlE28tr4Q5vENRWqrpzrZKNIqmb+NTkNaU+YbcpmzaqTVlRPaljvISmgeaUvUE37+5AHZZk4t+FQ6gyXMxrLizpQ8IImsJ3WBvTRL3mDv8HwMj5yPD75PNckD0FUjVPP9uRFFLi1hu2lEKVGOKJ3T5SqUsGSJEnRyJUrYdI2yV5ZoNIuBco2yfyoGyjVKuRJTNdFQiwpGF7UNFmTaCBuGhWTh7NG/kJEg4KKQVcNmdP59FewRYPaMWf6gWL8/HN7fVynV4ozM1gjVrkyo6kmdvzgKbK5YplATv+qVqVoRqid+5eGnE33bMYyM6OstOh5w4kuJUAq5PjlC1ZwKQ7W8dbyJ6dlOUQFFa5i96zfMRqkTKGI8ZQ1TOR4uc7CqDVOtBlxfkO4Zlxal1Tz16qK0LNTmw/QZ0szKgK0Yr6wm8cqST7fJH93K4pUlfyuX62ZV49UZvh/vNwL9OamCYLnnoNTllSAOQNWN4L31JLaa7FZgl0YX9GH2yEPXKCqR8caZP5+V/O3O1ZsUkgKgWTPUITXVr8SkbNPOm9TNoiqyKPlbYO0WpWah10f25aMrOyE2xUuRekji6sg+vjihqmT/cs8OUD7ohZHozCor/LsfJEvnNRur8CPdd5d+y5UkV7f7DSsJq8z0cj+O1aQkS8oWoAbu6lWS7gfYvZYr6eI8Cd7gTmFjMjdu+sgq1h0kbjlxwHZtSuLN9I9IxXlL+pe40N3/&amp;lt;/diagram&amp;gt;&amp;lt;/mxfile&amp;gt;&#34; onclick=&#34;(function(svg){var src=window.event.target||window.event.srcElement;while (src!=null&amp;amp;&amp;amp;src.nodeName.toLowerCase()!=&#39;a&#39;){src=src.parentNode;}if(src==null){if(svg.wnd!=null&amp;amp;&amp;amp;!svg.wnd.closed){svg.wnd.focus();}else{var r=function(evt){if(evt.data==&#39;ready&#39;&amp;amp;&amp;amp;evt.source==svg.wnd){svg.wnd.postMessage(decodeURIComponent(svg.getAttribute(&#39;content&#39;)),&#39;*&#39;);window.removeEventListener(&#39;message&#39;,r);}};window.addEventListener(&#39;message&#39;,r);svg.wnd=window.open(&#39;https://app.diagrams.net/?client=1&amp;amp;lightbox=1&amp;amp;edit=_blank&#39;);}}})(this);&#34; style=&#34;cursor:pointer;max-width:100%;max-height:441px;&#34;&gt;
&lt;defs/&gt;&lt;g&gt;&lt;rect x=&#34;460&#34; y=&#34;90&#34; width=&#34;120&#34; height=&#34;40&#34; rx=&#34;6&#34; ry=&#34;6&#34; fill=&#34;#b3b3b3&#34; stroke=&#34;#000000&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 110px; margin-left: 461px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;
Netflix
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;520&#34; y=&#34;114&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;Netflix&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;rect x=&#34;160&#34; y=&#34;90&#34; width=&#34;120&#34; height=&#34;40&#34; rx=&#34;6&#34; ry=&#34;6&#34; fill=&#34;#b3b3b3&#34; stroke=&#34;#000000&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 110px; margin-left: 161px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;
Sleep
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;220&#34; y=&#34;114&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;Sleep&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;rect x=&#34;310&#34; y=&#34;220&#34; width=&#34;120&#34; height=&#34;40&#34; rx=&#34;6&#34; ry=&#34;6&#34; fill=&#34;#b3b3b3&#34; stroke=&#34;#000000&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 240px; margin-left: 311px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;
Homework
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;370&#34; y=&#34;244&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;Homework&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 370 220 L 514.54 133.28&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 519.04 130.58 L 514.84 137.18 L 514.54 133.28 L 511.24 131.18 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;rect x=&#34;410&#34; y=&#34;150&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 160px; margin-left: 411px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;
0.4
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;430&#34; y=&#34;164&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.4&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 370 220 L 225.46 133.28&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 220.96 130.58 L 228.76 131.18 L 225.46 133.28 L 225.16 137.18 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;rect x=&#34;290&#34; y=&#34;150&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 160px; margin-left: 291px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;
0.4
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;310&#34; y=&#34;164&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.4&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 500 90 Q 480 60 490 45 Q 500 30 515 30 Q 530 30 540 40 Q 550 50 542.01 73.96&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 540.35 78.94 L 539.25 71.19 L 542.01 73.96 L 545.89 73.41 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;rect x=&#34;190&#34; y=&#34;0&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 10px; margin-left: 191px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;
0.5
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;210&#34; y=&#34;14&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.5&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 280 110 L 453.63 110&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 458.88 110 L 451.88 113.5 L 453.63 110 L 451.88 106.5 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;rect x=&#34;344&#34; y=&#34;120&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 130px; margin-left: 345px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;
0.1
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;364&#34; y=&#34;134&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.1&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 190 90 Q 170 60 180 45 Q 190 30 205 30 Q 220 30 230 40 Q 240 50 232.01 73.96&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 230.35 78.94 L 229.25 71.19 L 232.01 73.96 L 235.89 73.41 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;path d=&#34;M 190 130 L 334.54 216.72&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 339.04 219.42 L 331.24 218.82 L 334.54 216.72 L 334.84 212.82 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;rect x=&#34;230&#34; y=&#34;180&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 190px; margin-left: 231px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;
0.4
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;250&#34; y=&#34;194&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.4&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;rect x=&#34;500&#34; y=&#34;0&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 10px; margin-left: 501px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;
0.6
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;520&#34; y=&#34;14&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.6&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 550 133 L 414.45 214.71&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 409.96 217.42 L 414.15 210.81 L 414.45 214.71 L 417.76 216.81 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;rect x=&#34;470&#34; y=&#34;180&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 190px; margin-left: 471px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;
0.1
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;490&#34; y=&#34;194&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.1&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 355 260 Q 340 290 347.5 305 Q 355 320 375 320 Q 395 320 402.5 305 Q 410 290 402.85 275.7&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 400.5 271 L 406.76 275.7 L 402.85 275.7 L 400.5 278.83 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;rect x=&#34;360&#34; y=&#34;330&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 340px; margin-left: 361px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;
0.2
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;380&#34; y=&#34;344&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.2&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 460 100 L 286.37 100&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 281.12 100 L 288.12 96.5 L 286.37 100 L 288.12 103.5 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;rect x=&#34;350&#34; y=&#34;70&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 80px; margin-left: 351px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;
0.3
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;370&#34; y=&#34;84&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.3&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 40 0 L 80 40 L 40 80 L 0 40 Z&#34; fill=&#34;#99ccff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 40px; margin-left: 1px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;
Stressed
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;40&#34; y=&#34;44&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;Stressed&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 40 130 L 80 170 L 40 210 L 0 170 Z&#34; fill=&#34;#99ccff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 170px; margin-left: 1px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;
Relaxed
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;40&#34; y=&#34;174&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;Relaxed&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 160 100 L 72.36 56.18&#34; fill=&#34;none&#34; stroke=&#34;#0000ff&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 67.67 53.83 L 75.49 53.83 L 72.36 56.18 L 72.36 60.09 Z&#34; fill=&#34;#0000ff&#34; stroke=&#34;#0000ff&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;path d=&#34;M 160 120 L 66.1 148.17&#34; fill=&#34;none&#34; stroke=&#34;#0000ff&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 61.07 149.68 L 66.77 144.31 L 66.1 148.17 L 68.78 151.02 Z&#34; fill=&#34;#0000ff&#34; stroke=&#34;#0000ff&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;path d=&#34;M 710 0 L 750 40 L 710 80 L 670 40 Z&#34; fill=&#34;#99ccff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 40px; margin-left: 671px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;
Stressed
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;710&#34; y=&#34;44&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;Stressed&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 710 130 L 750 170 L 710 210 L 670 170 Z&#34; fill=&#34;#99ccff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 170px; margin-left: 671px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;
Relaxed
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;710&#34; y=&#34;174&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;Relaxed&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 580 110 L 678.39 57.02&#34; fill=&#34;none&#34; stroke=&#34;#0000ff&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 683.02 54.53 L 678.51 60.93 L 678.39 57.02 L 675.19 54.77 Z&#34; fill=&#34;#0000ff&#34; stroke=&#34;#0000ff&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;path d=&#34;M 580 120 L 683.86 148.32&#34; fill=&#34;none&#34; stroke=&#34;#0000ff&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 688.92 149.71 L 681.25 151.24 L 683.86 148.32 L 683.09 144.49 Z&#34; fill=&#34;#0000ff&#34; stroke=&#34;#0000ff&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;path d=&#34;M 333.04 261 L 273.42 354.63&#34; fill=&#34;none&#34; stroke=&#34;#0000ff&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 270.6 359.06 L 271.41 351.27 L 273.42 354.63 L 277.31 355.03 Z&#34; fill=&#34;#0000ff&#34; stroke=&#34;#0000ff&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;path d=&#34;M 412.96 262 L 466.8 354.5&#34; fill=&#34;none&#34; stroke=&#34;#0000ff&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 469.44 359.03 L 462.89 354.74 L 466.8 354.5 L 468.94 351.22 Z&#34; fill=&#34;#0000ff&#34; stroke=&#34;#0000ff&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;path d=&#34;M 270 360 L 310 400 L 270 440 L 230 400 Z&#34; fill=&#34;#99ccff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 400px; margin-left: 231px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;
Stressed
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;270&#34; y=&#34;404&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;Stressed&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 470 360 L 510 400 L 470 440 L 430 400 Z&#34; fill=&#34;#99ccff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 400px; margin-left: 431px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;
Relaxed
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;470&#34; y=&#34;404&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;Relaxed&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;rect x=&#34;90&#34; y=&#34;50&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 60px; margin-left: 91px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;
0.1
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;110&#34; y=&#34;64&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.1&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;rect x=&#34;100&#34; y=&#34;140&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 150px; margin-left: 101px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;
0.9
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;120&#34; y=&#34;154&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.9&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;rect x=&#34;610&#34; y=&#34;60&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 70px; margin-left: 611px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;
0.3
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;630&#34; y=&#34;74&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.3&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;rect x=&#34;600&#34; y=&#34;140&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 150px; margin-left: 601px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;
0.7
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;620&#34; y=&#34;154&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.7&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;rect x=&#34;260&#34; y=&#34;300&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 310px; margin-left: 261px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;
0.9
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;280&#34; y=&#34;314&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.9&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;rect x=&#34;450&#34; y=&#34;300&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 310px; margin-left: 451px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;
0.1
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;470&#34; y=&#34;314&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.1&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;/g&gt;
&lt;switch&gt;
&lt;g requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;/&gt;&lt;a transform=&#34;translate(0,-5)&#34; xlink:href=&#34;https://desk.draw.io/support/solutions/articles/16000042487&#34; target=&#34;_blank&#34;&gt;&lt;text text-anchor=&#34;middle&#34; font-size=&#34;10px&#34; x=&#34;50%&#34; y=&#34;100%&#34;&gt;Viewer does not support full SVG 1.1&lt;/text&gt;&lt;/a&gt;
&lt;/switch&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;div id=&#34;emission-probability&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Emission probability&lt;/h1&gt;
&lt;p&gt;The &lt;strong&gt;emission probability&lt;/strong&gt; is what gives way to the &lt;strong&gt;observed state&lt;/strong&gt;. In other words, given the state &lt;span class=&#34;math inline&#34;&gt;\(\pi\)&lt;/span&gt;, what is the probability of the observed state &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; happening at time &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
P (x_{i}|\pi_{i}) = \textrm{emission probability}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Still using the example from before, the difference now is that you don’t know if the student is sleeping, watching netflix, or doing homework. Instead, the only information you have is whether or not the student is stressed (observed state). Depending on your actual state (sleep, homework, netflix), the probability of being stressed changes.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Relaxed&lt;/th&gt;
&lt;th&gt;Stressed&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;strong&gt;Sleep&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.9&lt;/td&gt;
&lt;td&gt;0.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;strong&gt;Homework&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.1&lt;/td&gt;
&lt;td&gt;0.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;strong&gt;Netflix&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.7&lt;/td&gt;
&lt;td&gt;0.3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;For reference, here is the &lt;strong&gt;initial probabilities&lt;/strong&gt; from before:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Outcome&lt;/th&gt;
&lt;th&gt;Likelihood&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Sleep&lt;/td&gt;
&lt;td&gt;0.6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Homework&lt;/td&gt;
&lt;td&gt;0.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Netflix&lt;/td&gt;
&lt;td&gt;0.1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;As well as the &lt;strong&gt;transition probabilities&lt;/strong&gt;:
&lt;em&gt;Keep in mind:&lt;/em&gt; &lt;span class=&#34;math inline&#34;&gt;\(P (\pi_{i-1} \rightarrow \pi_{i})\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(P(\pi_{i}|\pi_{i-1})\)&lt;/span&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Sleep&lt;/th&gt;
&lt;th&gt;Homework&lt;/th&gt;
&lt;th&gt;Netflix&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;strong&gt;Sleep&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.5&lt;/td&gt;
&lt;td&gt;0.4&lt;/td&gt;
&lt;td&gt;0.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;strong&gt;Homework&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.4&lt;/td&gt;
&lt;td&gt;0.2&lt;/td&gt;
&lt;td&gt;0.4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;strong&gt;Netflix&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.3&lt;/td&gt;
&lt;td&gt;0.1&lt;/td&gt;
&lt;td&gt;0.6&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div id=&#34;example&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;table style=&#34;width:100%;&#34;&gt;
&lt;colgroup&gt;
&lt;col width=&#34;58%&#34; /&gt;
&lt;col width=&#34;4%&#34; /&gt;
&lt;col width=&#34;4%&#34; /&gt;
&lt;col width=&#34;4%&#34; /&gt;
&lt;col width=&#34;4%&#34; /&gt;
&lt;col width=&#34;4%&#34; /&gt;
&lt;col width=&#34;4%&#34; /&gt;
&lt;col width=&#34;4%&#34; /&gt;
&lt;col width=&#34;4%&#34; /&gt;
&lt;col width=&#34;4%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Observations &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; (1= stressed, 0=relaxed)&lt;/th&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;strong&gt;State Path&lt;/strong&gt; &lt;span class=&#34;math inline&#34;&gt;\(\pi\)&lt;/span&gt; (S= sleep, H=homework, N=netflix)&lt;/td&gt;
&lt;td&gt;H&lt;/td&gt;
&lt;td&gt;H&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;H&lt;/td&gt;
&lt;td&gt;S&lt;/td&gt;
&lt;td&gt;S&lt;/td&gt;
&lt;td&gt;S&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;strong&gt;Emission Probability&lt;/strong&gt; &lt;span class=&#34;math inline&#34;&gt;\(P (x_{i}|\pi_{i})\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;0.9&lt;/td&gt;
&lt;td&gt;0.9&lt;/td&gt;
&lt;td&gt;0.7&lt;/td&gt;
&lt;td&gt;0.7&lt;/td&gt;
&lt;td&gt;0.3&lt;/td&gt;
&lt;td&gt;0.9&lt;/td&gt;
&lt;td&gt;0.1&lt;/td&gt;
&lt;td&gt;0.9&lt;/td&gt;
&lt;td&gt;0.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;strong&gt;Transition Probability&lt;/strong&gt; &lt;span class=&#34;math inline&#34;&gt;\(P (\pi_{i-1} \rightarrow \pi_{i})\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;0.3&lt;/td&gt;
&lt;td&gt;0.2&lt;/td&gt;
&lt;td&gt;0.4&lt;/td&gt;
&lt;td&gt;0.6&lt;/td&gt;
&lt;td&gt;0.6&lt;/td&gt;
&lt;td&gt;0.1&lt;/td&gt;
&lt;td&gt;0.4&lt;/td&gt;
&lt;td&gt;0.5&lt;/td&gt;
&lt;td&gt;0.5&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;what-is-the-likelihood-of-a-specific-observation-sequence&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;What is the &lt;strong&gt;likelihood&lt;/strong&gt; of a specific observation sequence?&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
P (x)= \sum_{\pi} P(x \textrm{ and }\pi)
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;What the above equation describes is that to determine the likelihood of an observation sequence, you must &lt;strong&gt;add&lt;/strong&gt; the probabilities of the observed sequence and the potential (hidden) state paths occurring. So how do we do this???&lt;/p&gt;
&lt;p&gt;Based on conditional probability:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
P(x \textrm{ and } \pi) = P (x | \pi) \cdot P(\pi)
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Multiply the emission probabilities together:
&lt;em&gt;Given a state sequence, what is the probability of emitting the observed sequence.&lt;/em&gt;
&lt;span class=&#34;math display&#34;&gt;\[
P (x | \pi) = \prod_{t=1} P (x_{t}|\pi_{t})
\]&lt;/span&gt;
Multiply the transition probabilities together:
&lt;em&gt;Probabililty of a state sequence depends on the &lt;strong&gt;markov property&lt;/strong&gt; that the state at time t is only dependent on the state at t-1. &lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
P(\pi) = \prod_{t=1} P (\pi_{t}|\pi_{t-1})
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Putting it all together:
&lt;em&gt;The probability of an observed sequence and a corresponding hidden state sequence is equal to the product of the emission probabilities multiplied by the product of the transition probabilities.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
P(\pi \textrm{ and } x) =  \prod_{t=1} P (\pi_{t}|x_{t}) \cdot \prod_{t=1} P (\pi_{t}|\pi_{t-1})
\]&lt;/span&gt;
As an example:&lt;/p&gt;
&lt;p&gt;We could potentially state all possible state paths given a particular observations. If we observed: {1, 0, 0}, the possible state paths include SSS, SHH, SHN, SNN, SNH, HHH, HNS, HSH, HSS, etc. We could calculate the possibility of each, for example: SNS. Initial probability of sleep is 0.6. The probability of being stressed given that they are sleeping is 0.1. Sleep transitioning to Netflix is 0.1.Probability of being relaxed watching Netflix is 0.3. And so on…&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
P (\pi_{1}=S | \textrm{start}) \cdot P(x_{1}=1|\pi_{1}=S)\cdot P ( \pi_{2}=N | \pi_{1}=S )\cdot P(x_{1}=0|\pi_{1}=N)\cdot P (\pi_{3}=S|\pi_{2}=N)\cdot P(x_{3}=0|\pi_{3}=S)
\]&lt;/span&gt;
&lt;span class=&#34;math display&#34;&gt;\[
P (\pi=\textrm{S N S} \cap x=\textrm{1 0 0})=0.6 \cdot0.1\cdot0.1\cdot0.3\cdot0.3\cdot0.9 = 0.000486
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;To find the &lt;strong&gt;total probability&lt;/strong&gt; of an observed sequence (e.g. 1,0,0), we need to &lt;strong&gt;add&lt;/strong&gt; up all of the possible state path probabilities (SNS, SSS, HSN, etc.).&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
P(\textrm{1 0 0}) = P(\textrm{1 0 0}| \textrm{S N S})+P(\textrm{1 0 0}| \textrm{N N S}) +P(\textrm{1 0 0}| \textrm{S N H}) + ...
\]&lt;/span&gt;
However, what if the observation sequence is long and therefore the corresponding hidden state sequence is also long which many possible permutations. Calculating the likelihood of a observation would take forever… which is why we use the &lt;strong&gt;forward algorithm&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;forward-algorithm&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Forward algorithm&lt;/h2&gt;
&lt;p&gt;The forward algorithm uses &lt;strong&gt;dynamic programming&lt;/strong&gt;. What this means is that the problem is broken down into sub-problems which you find the optimal solution to in order to solve the larger problem. The solutions from the sub-problem are stored (memoization) so that you don’t waste time computing it over and over again.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;To implement this, you need to create an empty matrix to &lt;strong&gt;store intermediate values&lt;/strong&gt;. The rows equal the number of states (in this case, 3), while the columns should be equal to the number of values in the observation sequence.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;First column: The first column states the probability of each state being the initial state and emitting the first observation. All future calculations will be based on these values.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Subsequent columns: Each value in the matrix represents the likelihood of being in a certain state &lt;em&gt;k&lt;/em&gt; having observed the first &lt;em&gt;i&lt;/em&gt; values in the observation sequence. We will represent this by:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
P (\pi_t=k \textrm{ and } x = x_1, x_2 , x_3 , ...x_t) = \alpha_t (k)
\]&lt;/span&gt;
This is calculated by taking the emission probability of emitting &lt;span class=&#34;math inline&#34;&gt;\(x_t\)&lt;/span&gt; given that we are at state &lt;em&gt;k&lt;/em&gt; and multiplying this by the summation of the probabilities of being at the previous state &lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt; at &lt;em&gt;t-1&lt;/em&gt; and transitioning to state &lt;em&gt;k&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\alpha_t (k) = \textrm{(emission probability of } x_{t} \textrm{ given current state k)}\sum \alpha_{t-1} (l) \cdot \textrm{(transition probability from l to k)}
\]&lt;/span&gt;
&lt;span class=&#34;math display&#34;&gt;\[
\alpha_t (k) = P (x_{t}|\pi_{t})\sum \alpha_{t-1} (l) \cdot P (\pi_{t}|\pi_{t-1})
\]&lt;/span&gt;
OK, that’s just a ton of math, what does it actually mean? Still using the example from before with the observed sequence 1 0 0, if we have already calculated all the paths from 1 0, we then need to calculate the path to the next 0 based on these paths formed from 1 0. Therefore for each value, you must look at the values in the previous columns.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;def forward():
  # if Stressed = 0, Relaxed = 1
  observations = [1, 0, 0, 1, 1, 0, 1, 1]
  #build empty dynamic programming matrix 
  num_states= 3
  obs_seq_num = len (observations)
  grid = []
  for j in range(num_states):  
    grid.append(obs_seq_num * [0])
        
    
  # initial probability distribution for S, H, N
  initial = [0.6,0.3,0.1]
  
  # emission probability 
  emission= [[0.9,0.1],[0.1,0.9],[0.7,0.3]]
        
  #transition probabilities 
  transition = [[0.5,0.4,0.1],[0.4,0.2,0.4],[0.3,0.1,0.6]]

  #Start filling out the grid
  for t in range(obs_seq_num):
    for i in range(num_states):
      #first column 
      if t == 0: 
        # use the initial probability distribution 
        grid[i][t] = initial[i] * emission [i][observations[t]]
      else: 
        grid[i][t] = emission [i][observations[t]] * ((grid[0][t-1]*transition[0][i]) + (grid[1][t-1]*transition[1][i]) + (grid[2][t-1]*transition[2][i]))
  
  prettyPrint (grid)
  
  print (&amp;quot;Probability of observing: &amp;quot;)
  for k in observations:
    print (observations[k], end=&amp;quot;        &amp;quot;)
  print ()
  
  for s in range(obs_seq_num): 
    sum=0
    for q in range (num_states):
      sum+=grid[q][s]
    print (format(sum, &amp;quot;5.4f&amp;quot;), end = &amp;quot;   &amp;quot;)
forward()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        1       2       3       4       5       6       7       9
## S   0.0600  0.1323  0.0874  0.0061  0.0022  0.0064  0.0005  0.0002  
## H   0.2700  0.0081  0.0064  0.0371  0.0100  0.0004  0.0029  0.0008  
## N   0.0300  0.0924  0.0503  0.0124  0.0069  0.0058  0.0013  0.0006  
## 
## Probability of observing: 
## 0        1        1        0        0        1        0        0        
## 0.3600   0.2328   0.1441   0.0557   0.0191   0.0126   0.0047   0.0016&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For example, how did we calculate the probability of being at state S at time 2 with the observations thus far being: 1 0.&lt;/p&gt;
&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; version=&#34;1.1&#34; width=&#34;403px&#34; viewBox=&#34;-0.5 -0.5 403 324&#34; content=&#34;&amp;lt;mxfile host=&amp;quot;app.diagrams.net&amp;quot; modified=&amp;quot;2020-07-06T20:03:18.271Z&amp;quot; agent=&amp;quot;5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36&amp;quot; etag=&amp;quot;DsuH0lr6Z-pgRyVUjwq8&amp;quot; version=&amp;quot;13.3.9&amp;quot; type=&amp;quot;device&amp;quot;&amp;gt;&amp;lt;diagram id=&amp;quot;1_E2bteAL8cD-64oW33z&amp;quot; name=&amp;quot;Page-1&amp;quot;&amp;gt;7Vxdd6I4GP41Xm4PAUG9nNo6vejM7lkvdnqZlVRzBokTYtX59ZtAECUggQVBak9PD3mBAO/zvJ+EDqzpev+Vws3qG3GRNzANdz+wngamORk6/K8QHCKBDcaRYEmxG4lAIpjj30gKDSndYhcFZwcyQjyGN+fCBfF9tGBnMkgp2Z0f9k6886tu4BIpgvkCeqr0H+yylZQCZ5LseEF4uZKXHpvygdcwPlg+SbCCLtmdiKzngTWlhLBoa72fIk/oLtZLdN4sZ+/xxijymc4J31+Xz8avX+Zk/fb68vantVvNrT/kLB/Q28oHnhG6g9Tlwm+QUbyXN88OsUb4c2zEJoP/CtHjYoU99xUeyJbF0nj0yPX/iv0QP0McSrzt2j+VBAxSJlEfCsGKrT2+DfjmboUZmm/gQuzccXZFM3hwE+Dw0uEMFC22NMAf6G8URPMIKdpvoO/KwYZgnyH6/ME1FV/4nfhsLh9KXAx6eOnz7QUSh4o7i+ESe6WWEGVon6t+cASVGwMia8TogR8iTzDHkgfSEEZyuEtYNTSkbHVCKCvmD5RMXh6nTsDmGxLvEtibCvYq1ju89qAvYF4Rin9zpUHvVKvhPdmP/Jff5dR4sAc2P2/KxyAZ819xOGVT4geMQhxqDMGA7VDAusMCHZDzrUhF/hDDqoc0aAxpS0Ga4TXiknBggEu4S8cKE123hlZ1gMyLppkB0BGL6wAEJgpCxoPhKLjwB2fnCuf2RH6iKfEId1pPPgkxe8eelxIp/k2oEfM490XuWGPXDf15FoSUbH0XxdiUd435rMwFxdJwlypEjSE0VAC66C0/gdUAp3WzsUbFIQz57heRBwruezAI8OJc9yIExLYy4KwLf7iccDgwE+yzDMXO+IGOM50aiX6Rq+SRBdodZmv3RJt2hjJjGUUeZJwL5wlvhoLlFf4SzEjASyUj4xRCAdnSBZLnnOaUqWmAfXkezvklYso8IdjHZ/4fGYyawhgPwDKtfjvOHOakollHHKetQKSi87kc59FK2nOcpooKzzfGo2G/Dce+JcNximNb38uz6khfrsiyUpfMkiwdz2oDVyNx0XaKt4GIo2V7RS6xMUDii515RHPUb384uohJqgKzWvaH47vJVKu/mrMZta/EswhjrPaTemU14zJZRNtWozaWPrfVaCffzVmNmtgJq3F6nntPbslqLNWzKehUbSyhPWY/5DFi+03omWfi0ehpf7QQPjjEA58/1Y/TQXTWyI7HyXnhKD6xqIs1m8m7GlTsYsU96rBhpJFfRR2hwqDSVl8MpBpjTophuo2xdPIEUvM03BgDajZ7ye3fi8cSxaP2+7zGIghQ39r3PagDIxuTzpSPKiQ8qPe8Dw0ur3joWP0IzLvVdK6CVF+rcrOZmD3PhSMq3koyDDSS4c9lOB0oItUGMjccu/cR5/KakY4ZjqWRhRdVkfVVi6CgVBxUrADjbl9hBRgv3y2sAHO8YzsVoEKPyiXgKDVRwzWgpVElVGPfqFqzovVehS5T49V4N9aruF2mqllgaaY2320r8p+doa++o73Ttxb6ahSWjThahWKCYLNZvgsux+DuuNlWl0rWxlMwSU105dWSQHWzc4WoHSwXyn+kUe5LHND2Si+grsZ7uQNjJm9fWgNGXXPy/Q4MD7iZr0CuCIypsRioicpaIySWi35tBbWhkzK1ScWgNhylnGl6oqY/AdBY4NJxJpx8DdwnJpjGldNwNYqWZkKdVWR+dl4+z/7kVLLsK1NJY+19EZXy4a+TZA1SKScluHUqpVf0NE2lGjKV/G8PNT9ezGaWeb0I12qjyU71hyp/7WinC/hrR7gacp2GuFTQqaqTS602g2rzS46Rmqi2FYJ8mPxTmejw5D/zWM//AQ==&amp;lt;/diagram&amp;gt;&amp;lt;/mxfile&amp;gt;&#34; onclick=&#34;(function(svg){var src=window.event.target||window.event.srcElement;while (src!=null&amp;amp;&amp;amp;src.nodeName.toLowerCase()!=&#39;a&#39;){src=src.parentNode;}if(src==null){if(svg.wnd!=null&amp;amp;&amp;amp;!svg.wnd.closed){svg.wnd.focus();}else{var r=function(evt){if(evt.data==&#39;ready&#39;&amp;amp;&amp;amp;evt.source==svg.wnd){svg.wnd.postMessage(decodeURIComponent(svg.getAttribute(&#39;content&#39;)),&#39;*&#39;);window.removeEventListener(&#39;message&#39;,r);}};window.addEventListener(&#39;message&#39;,r);svg.wnd=window.open(&#39;https://app.diagrams.net/?client=1&amp;amp;lightbox=1&amp;amp;edit=_blank&#39;);}}})(this);&#34; style=&#34;cursor:pointer;max-width:100%;max-height:324px;&#34;&gt;
&lt;defs/&gt;&lt;g&gt;&lt;path d=&#34;M 0 40 L 0 0 L 400 0 L 400 40&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; transform=&#34;translate(2,3)&#34; opacity=&#34;0.25&#34;/&gt;&lt;path d=&#34;M 0 40 L 0 0 L 400 0 L 400 40&#34; fill=&#34;#ffffff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;path d=&#34;M 0 40 L 0 320 L 400 320 L 400 40&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; transform=&#34;translate(2,3)&#34; opacity=&#34;0.25&#34;/&gt;&lt;path d=&#34;M 0 40 L 0 320 L 400 320 L 400 40&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 0 40 L 400 40&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; transform=&#34;translate(2,3)&#34; opacity=&#34;0.25&#34;/&gt;&lt;path d=&#34;M 0 40 L 400 40&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 398px; height: 1px; padding-top: 20px; margin-left: 1px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; font-weight: bold; white-space: normal; word-wrap: normal; &#34;&gt;
Forward Matrix
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;200&#34; y=&#34;24&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34;&gt;Forward Matrix&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 40 40 L 0 40 L 0 160 L 40 160&#34; fill=&#34;#ffffff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 40 L 400 40 L 400 160 L 40 160&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 40 L 40 160&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 80 L 40 40 L 160 40 L 160 80&#34; fill=&#34;#ffffff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 80 L 40 160 L 160 160 L 160 80&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 80 L 160 80&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 60px; margin-left: 41px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; font-weight: bold; white-space: normal; word-wrap: normal; &#34;&gt;
time = 1
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;100&#34; y=&#34;64&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34;&gt;time = 1&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;rect x=&#34;70&#34; y=&#34;110&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; transform=&#34;translate(2,3)&#34; opacity=&#34;0.25&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 120px; margin-left: 71px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; &#34;&gt;
0.06
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;90&#34; y=&#34;124&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.06&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 160 80 L 160 40 L 280 40 L 280 80&#34; fill=&#34;#ffffff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 160 80 L 160 160 L 280 160 L 280 80&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 160 80 L 280 80&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 60px; margin-left: 161px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; font-weight: bold; white-space: normal; word-wrap: normal; &#34;&gt;
2
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;220&#34; y=&#34;64&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34;&gt;2&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 240 120 L 303.63 120&#34; fill=&#34;none&#34; stroke=&#34;#66cc00&#34; stroke-opacity=&#34;0.3&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 308.88 120 L 301.88 123.5 L 303.63 120 L 301.88 116.5 Z&#34; fill-opacity=&#34;0.3&#34; fill=&#34;#66cc00&#34; stroke=&#34;#66cc00&#34; stroke-opacity=&#34;0.3&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;rect x=&#34;200&#34; y=&#34;110&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; transform=&#34;translate(2,3)&#34; opacity=&#34;0.25&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 120px; margin-left: 201px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; &#34;&gt;
0.1323
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;220&#34; y=&#34;124&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.1323&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 280 80 L 280 40 L 400 40 L 400 80&#34; fill=&#34;#ffffff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 280 80 L 280 160 L 400 160 L 400 80&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 280 80 L 400 80&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 60px; margin-left: 281px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; font-weight: bold; white-space: normal; word-wrap: normal; &#34;&gt;
3
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;340&#34; y=&#34;64&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34;&gt;3&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;rect x=&#34;320&#34; y=&#34;110&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; transform=&#34;translate(2,3)&#34; opacity=&#34;0.25&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 120px; margin-left: 321px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; &#34;&gt;
0.0874
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;340&#34; y=&#34;124&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.0874&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 40 160 L 0 160 L 0 240 L 40 240&#34; fill=&#34;#ffffff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 160 L 400 160 L 400 240 L 40 240&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 160 L 40 240&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 160 L 40 160 L 160 160 L 160 160&#34; fill=&#34;#ffffff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 160 L 40 240 L 160 240 L 160 160&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 160 L 160 160&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;rect x=&#34;70&#34; y=&#34;190&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; transform=&#34;translate(2,3)&#34; opacity=&#34;0.25&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 200px; margin-left: 71px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; &#34;&gt;
0.27
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;90&#34; y=&#34;204&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.27&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 160 160 L 160 160 L 280 160 L 280 160&#34; fill=&#34;#ffffff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 160 160 L 160 240 L 280 240 L 280 160&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 160 160 L 280 160&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;rect x=&#34;200&#34; y=&#34;190&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; transform=&#34;translate(2,3)&#34; opacity=&#34;0.25&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 200px; margin-left: 201px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; &#34;&gt;
0.0081
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;220&#34; y=&#34;204&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.0081&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 280 160 L 280 160 L 400 160 L 400 160&#34; fill=&#34;#ffffff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 280 160 L 280 240 L 400 240 L 400 160&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 280 160 L 400 160&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;rect x=&#34;320&#34; y=&#34;190&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; transform=&#34;translate(2,3)&#34; opacity=&#34;0.25&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 200px; margin-left: 321px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; &#34;&gt;
0.0064
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;340&#34; y=&#34;204&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.0064&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 110 200 L 193.64 204.65&#34; fill=&#34;none&#34; stroke=&#34;#ff0000&#34; stroke-opacity=&#34;0.3&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 198.88 204.94 L 191.7 208.04 L 193.64 204.65 L 192.09 201.06 Z&#34; fill-opacity=&#34;0.3&#34; fill=&#34;#ff0000&#34; stroke=&#34;#ff0000&#34; stroke-opacity=&#34;0.3&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 240 L 0 240 L 0 320 L 40 320&#34; fill=&#34;#ffffff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 240 L 400 240 L 400 320 L 40 320&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 240 L 40 320&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 240 L 40 240 L 160 240 L 160 240&#34; fill=&#34;#ffffff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 240 L 40 320 L 160 320 L 160 240&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 240 L 160 240&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;rect x=&#34;70&#34; y=&#34;270&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; transform=&#34;translate(2,3)&#34; opacity=&#34;0.25&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 280px; margin-left: 71px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; &#34;&gt;
0.03
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;90&#34; y=&#34;284&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.03&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 160 240 L 160 240 L 280 240 L 280 240&#34; fill=&#34;#ffffff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 160 240 L 160 320 L 280 320 L 280 240&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 160 240 L 280 240&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;rect x=&#34;200&#34; y=&#34;270&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; transform=&#34;translate(2,3)&#34; opacity=&#34;0.25&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 280px; margin-left: 201px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; &#34;&gt;
0.0924
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;220&#34; y=&#34;284&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.0924&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 280 240 L 280 240 L 400 240 L 400 240&#34; fill=&#34;#ffffff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 280 240 L 280 320 L 400 320 L 400 240&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 280 240 L 400 240&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;rect x=&#34;320&#34; y=&#34;270&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; transform=&#34;translate(2,3)&#34; opacity=&#34;0.25&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 280px; margin-left: 321px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; &#34;&gt;
0.0503
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;340&#34; y=&#34;284&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.0503&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 110 280 L 196.72 135.46&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 199.42 130.96 L 198.82 138.76 L 196.72 135.46 L 192.82 135.16 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 110 125 L 195.11 195.92&#34; fill=&#34;none&#34; stroke=&#34;#ff0000&#34; stroke-opacity=&#34;0.3&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 199.14 199.28 L 191.52 197.49 L 195.11 195.92 L 196 192.11 Z&#34; fill-opacity=&#34;0.3&#34; fill=&#34;#ff0000&#34; stroke=&#34;#ff0000&#34; stroke-opacity=&#34;0.3&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 110 280 L 194.97 213.91&#34; fill=&#34;none&#34; stroke=&#34;#ff0000&#34; stroke-opacity=&#34;0.3&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 199.12 210.69 L 195.74 217.75 L 194.97 213.91 L 191.44 212.22 Z&#34; fill-opacity=&#34;0.3&#34; fill=&#34;#ff0000&#34; stroke=&#34;#ff0000&#34; stroke-opacity=&#34;0.3&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 110 125 L 196.64 264.59&#34; fill=&#34;none&#34; stroke=&#34;#0000ff&#34; stroke-opacity=&#34;0.3&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 199.41 269.05 L 192.75 264.95 L 196.64 264.59 L 198.69 261.26 Z&#34; fill-opacity=&#34;0.3&#34; fill=&#34;#0000ff&#34; stroke=&#34;#0000ff&#34; stroke-opacity=&#34;0.3&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;rect x=&#34;0&#34; y=&#34;100&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; transform=&#34;translate(2,3)&#34; opacity=&#34;0.25&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 110px; margin-left: 1px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; font-weight: bold; white-space: normal; word-wrap: normal; &#34;&gt;
S
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;20&#34; y=&#34;114&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34;&gt;S&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;rect x=&#34;0&#34; y=&#34;190&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; transform=&#34;translate(2,3)&#34; opacity=&#34;0.25&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 200px; margin-left: 1px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; font-weight: bold; white-space: normal; word-wrap: normal; &#34;&gt;
H
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;20&#34; y=&#34;204&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34;&gt;H&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;rect x=&#34;0&#34; y=&#34;270&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; transform=&#34;translate(2,3)&#34; opacity=&#34;0.25&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 280px; margin-left: 1px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; font-weight: bold; white-space: normal; word-wrap: normal; &#34;&gt;
N
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;20&#34; y=&#34;284&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34;&gt;N&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 110 120 L 183.63 120&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 188.88 120 L 181.88 123.5 L 183.63 120 L 181.88 116.5 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 110 200 L 185.21 134.19&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 189.16 130.74 L 186.2 137.98 L 185.21 134.19 L 181.59 132.71 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 110 200 L 185.5 275.5&#34; fill=&#34;none&#34; stroke=&#34;#0000ff&#34; stroke-opacity=&#34;0.3&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 189.21 279.21 L 181.78 276.73 L 185.5 275.5 L 186.73 271.78 Z&#34; fill-opacity=&#34;0.3&#34; fill=&#34;#0000ff&#34; stroke=&#34;#0000ff&#34; stroke-opacity=&#34;0.3&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 110 280 L 183.68 289.21&#34; fill=&#34;none&#34; stroke=&#34;#0000ff&#34; stroke-opacity=&#34;0.3&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 188.89 289.86 L 181.51 292.47 L 183.68 289.21 L 182.38 285.52 Z&#34; fill-opacity=&#34;0.3&#34; fill=&#34;#0000ff&#34; stroke=&#34;#0000ff&#34; stroke-opacity=&#34;0.3&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 240 195 L 305.33 134.33&#34; fill=&#34;none&#34; stroke=&#34;#66cc00&#34; stroke-opacity=&#34;0.3&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 309.18 130.76 L 306.43 138.09 L 305.33 134.33 L 301.67 132.96 Z&#34; fill-opacity=&#34;0.3&#34; fill=&#34;#66cc00&#34; stroke=&#34;#66cc00&#34; stroke-opacity=&#34;0.3&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 240 285 L 316.92 145.58&#34; fill=&#34;none&#34; stroke=&#34;#66cc00&#34; stroke-opacity=&#34;0.3&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 319.46 140.98 L 319.14 148.8 L 316.92 145.58 L 313.01 145.42 Z&#34; fill-opacity=&#34;0.3&#34; fill=&#34;#66cc00&#34; stroke=&#34;#66cc00&#34; stroke-opacity=&#34;0.3&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;/g&gt;
&lt;switch&gt;
&lt;g requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;/&gt;&lt;a transform=&#34;translate(0,-5)&#34; xlink:href=&#34;https://desk.draw.io/support/solutions/articles/16000042487&#34; target=&#34;_blank&#34;&gt;&lt;text text-anchor=&#34;middle&#34; font-size=&#34;10px&#34; x=&#34;50%&#34; y=&#34;100%&#34;&gt;Viewer does not support full SVG 1.1&lt;/text&gt;&lt;/a&gt;
&lt;/switch&gt;
&lt;/svg&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
P(\pi_{2}=S \textrm{ and } x_2 = 0 )= 0.9\cdot (0.06\cdot 0.5 + 0.27\cdot 0.4+0.03\cdot0.3)=0.1323
\]&lt;/span&gt;
Finally, what is the probability of the following sequence: 1, 0, 0?
This is equal to the sum of all the probabilities at the end time:
&lt;span class=&#34;math display&#34;&gt;\[
P(x= \textrm{1 0 0})= 0.0874 + 0.0064 + 0.0503= 0.1441
\]&lt;/span&gt;
Additional note: How do you find the probability of, for example, being at state S at time 3?
This is just the likelihood probability from the matrix divided by the sum of the entire column (what we calculated above):
&lt;span class=&#34;math display&#34;&gt;\[
\frac{0.0874} {0.0874 + 0.0064 + 0.0503}=0.6065
\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;decoding-viterbi-algorithm&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Decoding: Viterbi Algorithm&lt;/h2&gt;
&lt;p&gt;The &lt;strong&gt;viterbi algorithm&lt;/strong&gt; attempts to answer: Given a sequence of observations, what is the most likely corresponding state path? It also uses &lt;strong&gt;dynamic programming&lt;/strong&gt; by going from the first observation to the current observation and finding the most likely path, a.k.a the &lt;strong&gt;max&lt;/strong&gt;. To find the path, we must also use &lt;strong&gt;backtracking&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
P (\pi = \pi_1,\pi_2, ...k \textrm{ and } x = x_1, x_2 , x_3 , ...x_t) = v_t (k)
\]&lt;/span&gt;
As you can see from the formula, it is very similar to forward except we use the &lt;strong&gt;max&lt;/strong&gt; instead of the &lt;strong&gt;sum&lt;/strong&gt; of previous probabilities.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
v_t (k) = \max (v_{t-1}(l)\cdot\textrm{emission probability of }x_t \textrm{ given state } k\cdot\textrm{transition probability from l to k})
\]&lt;/span&gt;
&lt;span class=&#34;math display&#34;&gt;\[
v_t (k) = \max (v_{t-1}(l)\cdot P (x_{t}|\pi_{t})\cdot P(\pi_{t}|\pi_{t-1}))
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Again, similar to the forward algorithm, you will need a matrix to store intermediate maximum values. Each value represents the probability of being at state &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; at time &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt; given the observations until time &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt; and having gone through the most probable path at time &lt;span class=&#34;math inline&#34;&gt;\(t-1\)&lt;/span&gt;. To compute this, you recursively find the most probable paths to each cell.&lt;/p&gt;
&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; version=&#34;1.1&#34; width=&#34;539px&#34; viewBox=&#34;-0.5 -0.5 539 352&#34; content=&#34;&amp;lt;mxfile host=&amp;quot;app.diagrams.net&amp;quot; modified=&amp;quot;2020-07-07T16:45:58.747Z&amp;quot; agent=&amp;quot;5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36&amp;quot; etag=&amp;quot;5-2SwuO5O3Gh21Fzdcor&amp;quot; version=&amp;quot;13.3.9&amp;quot; type=&amp;quot;device&amp;quot;&amp;gt;&amp;lt;diagram id=&amp;quot;oMR4MIIZOaCO1FRYHQ6a&amp;quot; name=&amp;quot;Page-1&amp;quot;&amp;gt;7VdNb+IwEP01ObZK7EDhWKC0qlQJicN+3KzYJFadGDmGhP31OybOhxMqikq32tVyQOMXe2Y878WeeHielo+KbJMXSZnwkE9LDy88hKbhGP4NcKiAUTCpgFhxWkFBC6z5L2ZB36I7TlnuTNRSCs23LhjJLGORdjCilCzcaRsp3KhbErMBsI6IGKLfONVJhU5Gfos/MR4ndeTAt09SUk+2QJ4QKosOhB88PFdS6spKyzkTpnZ1Xap1yzeeNokplun3LHj+WSxeN+XeL6JSkPX+eea/3NTJ7YnY2R3bbPWhLgEkvjWmVB6eFQnXbL0lkUEKoBywRKcCRgGYSmqiucxgeDP1AbDumdKsfDPxoCkHyIjJlGl1gCl2AcaT27tRtapWUYsULSsoRLcWTTqchKHdJLFaiJsQbbnAsBW7pHrB+eqxjN4bHcIoEiTPeeRWjJVcfwfbt/aPjr0ou4NDZ7BiisMemLJYFZbRgZh7RYbU5E5F7Kwkhmx0Cl2rv1vlGlNMgAL2bh6nKm8jrCSHDBuyw/r9sUyjaY+8Kn+7qiv3niMUuo4C1HOkiYqZHjg6CqHZ9ge0gT6ujfey+lVk9WvckHcpWXfojKPPJgtfRFYmMwBnlOQJo5arDm0GXxENb2d2RJCPAc21kq/NJYIaZC6FOVkhBPbht1z+hcQH4ysRP3D02cSHX0H8yTMfrq5LT/2BgJZLI6H/98EpR2PX0eQPC200EFoJw6MFjWqcknIgPGiZtCswl3Crxg0XogcRwWMjwQjYNmqZmQaMQ1d7bx+knFIT5mQ/p+Quo0d9X6mDC/vHe93ddzQ0OaGh/pV9vcZtPGDDpPZPkxBMe0ftaEhCeB0SYNh+11RvUPtxiB9+Aw==&amp;lt;/diagram&amp;gt;&amp;lt;/mxfile&amp;gt;&#34; onclick=&#34;(function(svg){var src=window.event.target||window.event.srcElement;while (src!=null&amp;amp;&amp;amp;src.nodeName.toLowerCase()!=&#39;a&#39;){src=src.parentNode;}if(src==null){if(svg.wnd!=null&amp;amp;&amp;amp;!svg.wnd.closed){svg.wnd.focus();}else{var r=function(evt){if(evt.data==&#39;ready&#39;&amp;amp;&amp;amp;evt.source==svg.wnd){svg.wnd.postMessage(decodeURIComponent(svg.getAttribute(&#39;content&#39;)),&#39;*&#39;);window.removeEventListener(&#39;message&#39;,r);}};window.addEventListener(&#39;message&#39;,r);svg.wnd=window.open(&#39;https://app.diagrams.net/?client=1&amp;amp;lightbox=1&amp;amp;edit=_blank&#39;);}}})(this);&#34; style=&#34;cursor:pointer;max-width:100%;max-height:352px;&#34;&gt;
&lt;defs/&gt;&lt;g&gt;&lt;path d=&#34;M 148.75 -20.25 Q 391.25 -20.25 391.25 199.75 Q 391.25 419.75 148.75 419.75 Z&#34; fill=&#34;#ffffff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; transform=&#34;rotate(-90,270,199.75)&#34; pointer-events=&#34;all&#34;/&gt;&lt;path d=&#34;M 50 321 L 50 47.37&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 50 42.12 L 53.5 49.12 L 50 47.37 L 46.5 49.12 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;path d=&#34;M 50 321 L 523.63 321&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 528.88 321 L 521.88 324.5 L 523.63 321 L 521.88 317.5 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;path d=&#34;M 50 81 L 530 81&#34; fill=&#34;none&#34; stroke=&#34;#0000ff&#34; stroke-width=&#34;2&#34; stroke-miterlimit=&#34;10&#34; stroke-dasharray=&#34;2 6&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 270 321 L 270 1&#34; fill=&#34;none&#34; stroke=&#34;#ff0000&#34; stroke-width=&#34;2&#34; stroke-miterlimit=&#34;10&#34; stroke-dasharray=&#34;2 6&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;rect x=&#34;230&#34; y=&#34;331&#34; width=&#34;80&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 341px; margin-left: 231px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;
x = argmax
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;270&#34; y=&#34;345&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;x = argmax&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;rect x=&#34;0&#34; y=&#34;71&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 81px; margin-left: 1px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;
y=max
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;20&#34; y=&#34;85&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;y=max&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;/g&gt;
&lt;switch&gt;
&lt;g requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;/&gt;&lt;a transform=&#34;translate(0,-5)&#34; xlink:href=&#34;https://desk.draw.io/support/solutions/articles/16000042487&#34; target=&#34;_blank&#34;&gt;&lt;text text-anchor=&#34;middle&#34; font-size=&#34;10px&#34; x=&#34;50%&#34; y=&#34;100%&#34;&gt;Viewer does not support full SVG 1.1&lt;/text&gt;&lt;/a&gt;
&lt;/switch&gt;
&lt;/svg&gt;
&lt;p&gt;But what about the actual path? This is when we use backtracking and &lt;strong&gt;argmax&lt;/strong&gt; instead of max. If you have a typical hyperbola, at the highest point, the y-value you obtain is the max, while the x-value in which you used as input into the function to obtain the highest point is the argmax.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\pi_t (k) = \textrm{argmax} (v_{t-1}(l)\cdot P (x_{t}|\pi_{t})\cdot P(\pi_{t}|\pi_{t-1}))
\]&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;def viterbi(): 
  # if Stressed = 0, Relaxed = 1
  observations = [1, 0, 0, 1, 1, 0, 1, 1]
  #build empty dynamic programming matrix 
  num_states= 3
  obs_seq_num = len (observations)
  grid = []
  for j in range(num_states):  
    grid.append(obs_seq_num * [0])
  
        
  # initial probability distribution for S, H, N
  initial = [0.6,0.3,0.1]
  
  # emission probability 
  emission= [[0.9,0.1],[0.1,0.9],[0.7,0.3]]
        
  #transition probabilities 
  transition = [[0.5,0.4,0.1],[0.4,0.2,0.4],[0.3,0.1,0.6]]



  for t in range(obs_seq_num):
    for i in range(num_states):
      #first column 
      if t == 0: 
        # use the initial probability distribution 
        grid[i][t] = initial[i] * emission [i][observations[t]]
      else: 
        grid[i][t] = emission [i][observations[t]] * max ((grid[0][t-1]*transition[0][i]),  (grid[1][t-1]*transition[1][i]), (grid[2][t-1]*transition[2][i]))
        
  prettyPrint (grid)
  
  print(&amp;quot;Probability of most probable path of 1, 0, 0, 1, 1, 0, 1, 1:&amp;quot;, grid[1][7])
  
  path=&amp;quot;&amp;quot;
  for p in range(obs_seq_num): 
    col= [grid [0][p], grid [1][p], grid [2][p]]
    index = col.index(max(col))
    
    state_dict={0:&amp;quot;S&amp;quot;, 1:&amp;quot;H&amp;quot;, 2:&amp;quot;N&amp;quot;}
    path+=state_dict[index]
    
  print (&amp;quot;Most likely state path: &amp;quot; + path)
  
viterbi()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        1       2       3       4       5       6       7       9
## S   0.0600  0.0972  0.0437  0.0022  0.0006  0.0010  0.0001  0.0000  
## H   0.2700  0.0054  0.0039  0.0157  0.0028  0.0001  0.0004  0.0001  
## N   0.0300  0.0756  0.0318  0.0057  0.0019  0.0008  0.0001  0.0000  
## 
## Probability of most probable path of 1, 0, 0, 1, 1, 0, 1, 1: 6.611976345600003e-05
## Most likely state path: HSSHHSHH&lt;/code&gt;&lt;/pre&gt;
&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; version=&#34;1.1&#34; width=&#34;403px&#34; viewBox=&#34;-0.5 -0.5 403 324&#34; content=&#34;&amp;lt;mxfile host=&amp;quot;app.diagrams.net&amp;quot; modified=&amp;quot;2020-07-07T21:52:17.644Z&amp;quot; agent=&amp;quot;5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36&amp;quot; etag=&amp;quot;n69mDG4RgMj9XC624l1T&amp;quot; version=&amp;quot;13.3.9&amp;quot; type=&amp;quot;device&amp;quot;&amp;gt;&amp;lt;diagram id=&amp;quot;AHcoFEZCvdGWv9FQ2CJZ&amp;quot; name=&amp;quot;Page-1&amp;quot;&amp;gt;7Vvfc5s4EP5r/HgZfhhjPzYkaR/am9557i59VEExagVyhRzb/etPAskYhDEQE2I7GU9GWiQB++2udj/LI9uLNh8pWIZfSADxyDKCzci+G1nWbDzh/4Vgmwkcc5oJFhQFmcjMBXP0G0qhIaUrFMCkMJARghlaFoU+iWPos4IMUErWxWFPBBfvugQLqAnmPsC69D8UsDCTTh0jl3+CaBGqO5uGvBIBNVgKkhAEZL0nsu9HtkcJYVkr2ngQC90pvWTzHg5c3T0YhTFrMmEB4WzqIRb9g/8CP8C3x1/b8A+5yjPAK/nC/yIG6XfEhV8Ao2gjH55tlUb4eyxFk4HvQnTrhwgHn8GWrJiSqt4t1/9nFKf4GWIowaso3pckDFAmUR8LQcgizNsmb65D/ijzJfDFxTW3rmwFDJYJSm+drkChv6IJeoZ/wyRbR0jhZgniQHaWBMX8pe6fuabUjZ9IzObypcTNAEaLmLd9KIaKJ1NwiatSS5AyuDmofnMHKncGSCLI6JYPkROsqbQD6Qiu7K5zqxor2wn3LMpW9gMShaNaOgebNyTeLbC3NOx1rNcowiAWMIeEot9caQDvazV9JueWf/hTesaNM3L4PI/3zbzPP2I4ZR6JE0YBSjUGQcLWMGFvxwqagHzYi3TktwrWZkibZl9I2xrSDEWQS9KOYdbhLgMryHU9GFrdAbJqXbMCINN6VYDGGkDGjTHRYOHvzYr65u5EfkKPYMJj1l1MUsieEMYlkRbehBYR3+Y+yAsRCoI0nFchSMkqDqCCpn1kPGyUBzGxG0RLHaHeYqWjAVQbLK/AaczJ4F4zOb6BwTj4ILJAYfoYJAnyi6oXG4BylRE3uvRP8yt+ZTLxPCPXJwy0tPGINp1qbe5pz6lQnpJRiAHj2Bfz2wqFyjt8FZaQg1XKPaYlRBKyoj6Uc/ZTyNIyplO/DrfxBWTaOim4u3fujrdbFSVnro76RcXJA4ZT2rveSJycahDZVx4nd04yXJycVfnN2NWRuSi/mZ6T3yjsr7kY6w51ff2127WOFWDl7ex06Oo0S/eoeCaQGNWYtCy5+oNEZz+MG8u97JBo1lNUpZrLHjom6rTFlXtN45qrP7epZCoMZ3zhjlNPVozfmOPobMWVO07jJLw/x9HJCuE49uzCHadV9Tq44+gMgwZPV0YJbhB7lGNE+5tQNE/Js97dZucjvLNVnZi/1eN+J5vlOqqfz0t7aqJGX4mHeHh4AX2lCpSMKmqQWGVc0NGtZChGzCxRYpOSTTWlxMpJU7mI75kSM3XCpS7Uv9eNLerG6nBUYZKz3uKRztxc/EbejLY5to/3Bom6WXEfv3AqLbPDc6kbrStkW+q9pnHd2J/bVNEthutc+HfcR84EvbH017pCwqXecRrXjf05TiXhYqu872Id56wIF0vP0+bngE/742/tzjiaQ3+tZuvZ2qd3YKy83B0MGD1H+/MdGB7JKg+LviYwDXKAYxRYF6rrRYyVOsDajJsainIaT0pOWE4amnJOY7e0kFFaqGfSydZzktY2ckqa9N12utuO7byy7Zzg0Obhw5mntKofq2gpa5nJaU3JHdKSnBJb0/kwqDM7kFO8liWd4Mua9pbU1AwGg9cqomJ2DRRleHeZyYvh5d38V2/Z8Pyng/b9/w==&amp;lt;/diagram&amp;gt;&amp;lt;/mxfile&amp;gt;&#34; onclick=&#34;(function(svg){var src=window.event.target||window.event.srcElement;while (src!=null&amp;amp;&amp;amp;src.nodeName.toLowerCase()!=&#39;a&#39;){src=src.parentNode;}if(src==null){if(svg.wnd!=null&amp;amp;&amp;amp;!svg.wnd.closed){svg.wnd.focus();}else{var r=function(evt){if(evt.data==&#39;ready&#39;&amp;amp;&amp;amp;evt.source==svg.wnd){svg.wnd.postMessage(decodeURIComponent(svg.getAttribute(&#39;content&#39;)),&#39;*&#39;);window.removeEventListener(&#39;message&#39;,r);}};window.addEventListener(&#39;message&#39;,r);svg.wnd=window.open(&#39;https://app.diagrams.net/?client=1&amp;amp;lightbox=1&amp;amp;edit=_blank&#39;);}}})(this);&#34; style=&#34;cursor:pointer;max-width:100%;max-height:324px;&#34;&gt;
&lt;defs/&gt;&lt;g&gt;&lt;path d=&#34;M 0 40 L 0 0 L 400 0 L 400 40&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; transform=&#34;translate(2,3)&#34; opacity=&#34;0.25&#34;/&gt;&lt;path d=&#34;M 0 40 L 0 0 L 400 0 L 400 40&#34; fill=&#34;#ffffff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;path d=&#34;M 0 40 L 0 320 L 400 320 L 400 40&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; transform=&#34;translate(2,3)&#34; opacity=&#34;0.25&#34;/&gt;&lt;path d=&#34;M 0 40 L 0 320 L 400 320 L 400 40&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 0 40 L 400 40&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; transform=&#34;translate(2,3)&#34; opacity=&#34;0.25&#34;/&gt;&lt;path d=&#34;M 0 40 L 400 40&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 398px; height: 1px; padding-top: 20px; margin-left: 1px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; font-weight: bold; white-space: normal; word-wrap: normal; &#34;&gt;
Viterbi Matrix
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;200&#34; y=&#34;24&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34;&gt;Viterbi Matrix&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 40 40 L 0 40 L 0 150 L 40 150&#34; fill=&#34;#ffffff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 40 L 400 40 L 400 150 L 40 150&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 40 L 40 150&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 80 L 40 40 L 160 40 L 160 80&#34; fill=&#34;#ffffff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 80 L 40 150 L 160 150 L 160 80&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 80 L 160 80&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 60px; margin-left: 41px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; font-weight: bold; white-space: normal; word-wrap: normal; &#34;&gt;
time = 1
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;100&#34; y=&#34;64&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34;&gt;time = 1&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;rect x=&#34;70&#34; y=&#34;110&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; transform=&#34;translate(2,3)&#34; opacity=&#34;0.25&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 120px; margin-left: 71px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; &#34;&gt;
0.06
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;90&#34; y=&#34;124&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.06&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 160 80 L 160 40 L 280 40 L 280 80&#34; fill=&#34;#ffffff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 160 80 L 160 150 L 280 150 L 280 80&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 160 80 L 280 80&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 60px; margin-left: 161px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; font-weight: bold; white-space: normal; word-wrap: normal; &#34;&gt;
2
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;220&#34; y=&#34;64&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34;&gt;2&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 240 120 L 303.63 120&#34; fill=&#34;none&#34; stroke=&#34;#66cc00&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 308.88 120 L 301.88 123.5 L 303.63 120 L 301.88 116.5 Z&#34; fill=&#34;#66cc00&#34; stroke=&#34;#66cc00&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;rect x=&#34;200&#34; y=&#34;110&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; transform=&#34;translate(2,3)&#34; opacity=&#34;0.25&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 120px; margin-left: 201px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; &#34;&gt;
0.0972
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;220&#34; y=&#34;124&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.0972&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 280 80 L 280 40 L 400 40 L 400 80&#34; fill=&#34;#ffffff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 280 80 L 280 150 L 400 150 L 400 80&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 280 80 L 400 80&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 60px; margin-left: 281px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; font-weight: bold; white-space: normal; word-wrap: normal; &#34;&gt;
3
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;340&#34; y=&#34;64&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34;&gt;3&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;rect x=&#34;320&#34; y=&#34;110&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; transform=&#34;translate(2,3)&#34; opacity=&#34;0.25&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 120px; margin-left: 321px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; &#34;&gt;
0.0473
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;340&#34; y=&#34;124&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.0473&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 40 150 L 0 150 L 0 230 L 40 230&#34; fill=&#34;#ffffff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 150 L 400 150 L 400 230 L 40 230&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 150 L 40 230&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 150 L 40 150 L 160 150 L 160 150&#34; fill=&#34;#ffffff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 150 L 40 230 L 160 230 L 160 150&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 150 L 160 150&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;rect x=&#34;70&#34; y=&#34;180&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; transform=&#34;translate(2,3)&#34; opacity=&#34;0.25&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 190px; margin-left: 71px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; &#34;&gt;
0.27
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;90&#34; y=&#34;194&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.27&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 160 150 L 160 150 L 280 150 L 280 150&#34; fill=&#34;#ffffff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 160 150 L 160 230 L 280 230 L 280 150&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 160 150 L 280 150&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;rect x=&#34;200&#34; y=&#34;180&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; transform=&#34;translate(2,3)&#34; opacity=&#34;0.25&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 190px; margin-left: 201px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; &#34;&gt;
0.0054
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;220&#34; y=&#34;194&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.0054&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 280 150 L 280 150 L 400 150 L 400 150&#34; fill=&#34;#ffffff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 280 150 L 280 230 L 400 230 L 400 150&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 280 150 L 400 150&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;rect x=&#34;320&#34; y=&#34;180&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; transform=&#34;translate(2,3)&#34; opacity=&#34;0.25&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 190px; margin-left: 321px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; &#34;&gt;
0.0039
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;340&#34; y=&#34;194&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.0039&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 110 190 L 193.64 194.65&#34; fill=&#34;none&#34; stroke=&#34;#0000ff&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 198.88 194.94 L 191.7 198.04 L 193.64 194.65 L 192.09 191.06 Z&#34; fill=&#34;#0000ff&#34; stroke=&#34;#0000ff&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 230 L 0 230 L 0 320 L 40 320&#34; fill=&#34;#ffffff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 230 L 400 230 L 400 320 L 40 320&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 230 L 40 320&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 230 L 40 230 L 160 230 L 160 230&#34; fill=&#34;#ffffff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 230 L 40 320 L 160 320 L 160 230&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 40 230 L 160 230&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;rect x=&#34;70&#34; y=&#34;260&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; transform=&#34;translate(2,3)&#34; opacity=&#34;0.25&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 270px; margin-left: 71px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; &#34;&gt;
0.03
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;90&#34; y=&#34;274&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.03&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 160 230 L 160 230 L 280 230 L 280 230&#34; fill=&#34;#ffffff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 160 230 L 160 320 L 280 320 L 280 230&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 160 230 L 280 230&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;rect x=&#34;200&#34; y=&#34;260&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; transform=&#34;translate(2,3)&#34; opacity=&#34;0.25&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 270px; margin-left: 201px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; &#34;&gt;
0.0756
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;220&#34; y=&#34;274&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.0756&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 280 230 L 280 230 L 400 230 L 400 230&#34; fill=&#34;#ffffff&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 280 230 L 280 320 L 400 320 L 400 230&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 280 230 L 400 230&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;rect x=&#34;320&#34; y=&#34;260&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; transform=&#34;translate(2,3)&#34; opacity=&#34;0.25&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 270px; margin-left: 321px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; &#34;&gt;
0.0318
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;340&#34; y=&#34;274&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;0.0318&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;rect x=&#34;0&#34; y=&#34;100&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; transform=&#34;translate(2,3)&#34; opacity=&#34;0.25&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 110px; margin-left: 1px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; font-weight: bold; white-space: normal; word-wrap: normal; &#34;&gt;
S
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;20&#34; y=&#34;114&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34;&gt;S&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;rect x=&#34;0&#34; y=&#34;190&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; transform=&#34;translate(2,3)&#34; opacity=&#34;0.25&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 200px; margin-left: 1px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; font-weight: bold; white-space: normal; word-wrap: normal; &#34;&gt;
H
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;20&#34; y=&#34;204&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34;&gt;H&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;rect x=&#34;0&#34; y=&#34;270&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; transform=&#34;translate(2,3)&#34; opacity=&#34;0.25&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;
&lt;switch&gt;
&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;
&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 280px; margin-left: 1px;&#34;&gt;
&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;
&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; font-weight: bold; white-space: normal; word-wrap: normal; &#34;&gt;
N
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/foreignObject&gt;&lt;text x=&#34;20&#34; y=&#34;284&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34;&gt;N&lt;/text&gt;
&lt;/switch&gt;
&lt;/g&gt;&lt;path d=&#34;M 110 190 L 184.91 133.82&#34; fill=&#34;none&#34; stroke=&#34;#0000ff&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 189.11 130.67 L 185.61 137.67 L 184.91 133.82 L 181.41 132.07 Z&#34; fill=&#34;#0000ff&#34; stroke=&#34;#0000ff&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 110 190 L 185.77 275.24&#34; fill=&#34;none&#34; stroke=&#34;#0000ff&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 189.26 279.16 L 181.99 276.26 L 185.77 275.24 L 187.22 271.61 Z&#34; fill=&#34;#0000ff&#34; stroke=&#34;#0000ff&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 240 120 L 305.5 185.5&#34; fill=&#34;none&#34; stroke=&#34;#66cc00&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 309.21 189.21 L 301.78 186.73 L 305.5 185.5 L 306.73 181.78 Z&#34; fill=&#34;#66cc00&#34; stroke=&#34;#66cc00&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 240 120 L 307.31 264.23&#34; fill=&#34;none&#34; stroke=&#34;#66cc00&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;path d=&#34;M 309.53 268.99 L 303.4 264.12 L 307.31 264.23 L 309.74 261.16 Z&#34; fill=&#34;#66cc00&#34; stroke=&#34;#66cc00&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;none&#34;/&gt;&lt;/g&gt;
&lt;switch&gt;
&lt;g requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;/&gt;&lt;a transform=&#34;translate(0,-5)&#34; xlink:href=&#34;https://desk.draw.io/support/solutions/articles/16000042487&#34; target=&#34;_blank&#34;&gt;&lt;text text-anchor=&#34;middle&#34; font-size=&#34;10px&#34; x=&#34;50%&#34; y=&#34;100%&#34;&gt;Viewer does not support full SVG 1.1&lt;/text&gt;&lt;/a&gt;
&lt;/switch&gt;
&lt;/svg&gt;
&lt;p&gt;For example, how did they calculate the probability of the most probable path at time 2 if the last state is S? The maximum of the time &lt;span class=&#34;math inline&#34;&gt;\(t-1\)&lt;/span&gt; is if the sequence started with H.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
P (\pi = \pi_1, ...S \textrm{ and } x = x_1, ...0)= 0.27 \cdot 0.4 \cdot 0.9=0.0972
\]&lt;/span&gt;
The highest probability in the very last column of the 1st matrix gives us the probability of the most probable path. Therefore, the probability of the most probable path of 1, 0, 0, 1, 1, 0, 1, 1: 6.611976345600003e-05.&lt;/p&gt;
&lt;p&gt;To find the path, go to each column and find the state with the maximum probability at the time point, for example, in this case, it is: &lt;em&gt;HSSHHSHH&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;packages&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Packages&lt;/h2&gt;
&lt;p&gt;This is too much math/I don’t care. There are plenty of packages available on the internet, for example, these methods are implemented in the R package, HMM, which I think is super helpful. Just understanding what the different terms mean such as transition matrix, initial probability distribution, emission probability, etc. should be enough to use these tools.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;application&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Application&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.kaggle.com/alfrandom/protein-secondary-structure/data&#34;&gt;This&lt;/a&gt; is a good exercise to test your understanding. It looks at predicting the secondary structure of proteins from the primary sequence. Another common application in bioinformatics is detecting CpG islands.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cs.rochester.edu/u/james/CSC248/Lec11.pdf&#34; class=&#34;uri&#34;&gt;https://www.cs.rochester.edu/u/james/CSC248/Lec11.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://pages.cs.wisc.edu/~matthewb/pages/notes/pdf/hmms/ForwardAlgorithm.pdf&#34; class=&#34;uri&#34;&gt;http://pages.cs.wisc.edu/~matthewb/pages/notes/pdf/hmms/ForwardAlgorithm.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://web.stanford.edu/~jurafsky/slp3/A.pdf&#34; class=&#34;uri&#34;&gt;https://web.stanford.edu/~jurafsky/slp3/A.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cis.upenn.edu/~cis262/notes/Example-Viterbi-DNA.pdf&#34; class=&#34;uri&#34;&gt;https://www.cis.upenn.edu/~cis262/notes/Example-Viterbi-DNA.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Bioinformatics Glossary</title>
      <link>/post/genetic_data/</link>
      <pubDate>Fri, 10 Jan 2020 00:00:00 +0000</pubDate>
      <guid>/post/genetic_data/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#genetic-data&#34;&gt;Genetic Data&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#reference-sequence-number&#34;&gt;Reference Sequence Number&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#grch-37&#34;&gt;GRCh 37&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ncbi-reference-sequence-refseq&#34;&gt;NCBI Reference Sequence (RefSeq)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ensemble&#34;&gt;Ensemble&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#types-of-files&#34;&gt;Types of Files&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#fasta&#34;&gt;FASTA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#fastq&#34;&gt;Fastq&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sambam-files&#34;&gt;SAM/BAM files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#vcf&#34;&gt;VCF&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#basic-programming-cheatsheet&#34;&gt;Basic Programming CheatSheet&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#unixlinux-bash&#34;&gt;Unix/Linux (Bash)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#need-to-kill-a-process&#34;&gt;Need to kill a process?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#bash-script&#34;&gt;Bash Script&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#r-vs-python&#34;&gt;R vs Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#micellaneous&#34;&gt;Micellaneous&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#k-mers&#34;&gt;K-mers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#blast&#34;&gt;BLAST&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#needleman-wunsch-algorithm&#34;&gt;Needleman-Wunsch algorithm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#smith-waterman-algorithm&#34;&gt;Smith-Waterman algorithm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#blosum-and-pam&#34;&gt;BLOSUM and PAM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#other&#34;&gt;Other&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;*** As I learn more, I will hopefully continue to add to this page for things that confused me or I thought would be helpful to compile together. As a warning, this is just a collection of notes and is not super organized.&lt;/p&gt;
&lt;div id=&#34;genetic-data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Genetic Data&lt;/h1&gt;
&lt;div id=&#34;reference-sequence-number&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Reference Sequence Number&lt;/h2&gt;
&lt;p&gt;When I first started working on genetic data and especially with my &lt;a href=&#34;../../project/PAX9_RF&#34;&gt;PAX9 project&lt;/a&gt;, I was so confused by all of the different values that were associated with the gene:&lt;/p&gt;
&lt;p&gt;Genomic reference: NG_013357.1 (GRCh 37)&lt;/p&gt;
&lt;p&gt;Transcript reference: NM_006194.3&lt;/p&gt;
&lt;p&gt;Ensembl gene ID: ENSG00000198807.8&lt;/p&gt;
&lt;p&gt;Canonical transcript: ENST00000361487.6&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;grch-37&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;GRCh 37&lt;/h2&gt;
&lt;p&gt;Before going into what all of these sequences are, first of all, what is GRCh37? I kept coming across this when I first trying to find data on my gene. &lt;strong&gt;GRCh37&lt;/strong&gt; stands for Genome Reference Consortium Human Build 37 and is generally synonymous with &lt;strong&gt;hg19&lt;/strong&gt;. Similarly, &lt;strong&gt;hg38&lt;/strong&gt; can also be used to refer to the same genome build as &lt;strong&gt;GRCh38&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;What is the difference between GRCh37 and GRCh38? GRCh38 was released after GRCh37 and has more updated annotations. Luckily, various tools such as from [NCBI]](&lt;a href=&#34;https://www.ncbi.nlm.nih.gov/genome/tools/remap&#34; class=&#34;uri&#34;&gt;https://www.ncbi.nlm.nih.gov/genome/tools/remap&lt;/a&gt;) or &lt;a href=&#34;https://www.ncbi.nlm.nih.gov/genome/tools/remap&#34;&gt;Ensembl&lt;/a&gt; can be used for converting annotations.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ncbi-reference-sequence-refseq&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;NCBI Reference Sequence (RefSeq)&lt;/h2&gt;
&lt;p&gt;The accession number format:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;NG_: &lt;strong&gt;g&lt;/strong&gt;ene/&lt;strong&gt;g&lt;/strong&gt;enomic region&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NC_: plus (+) strand on &lt;strong&gt;c&lt;/strong&gt;hromosome&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NT_: constructed genomic contigs (overlapping DNA fragments that are used to assemble the full sequence)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;‘NC’, ‘NG’, ‘NT’ all refer to genomic sequences&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;NM_: &lt;strong&gt;m&lt;/strong&gt;RNA, coding strand&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NR_: non-coding &lt;strong&gt;R&lt;/strong&gt;NA&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NP_: &lt;strong&gt;p&lt;/strong&gt;rotein&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Also, if it begins with an ‘X’ liks ‘XP’ or ‘XM’, it probably means that the sequence is from computational prediction.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;What about CDS? That is the coding region of a gene that is translated to protein. Therefore, it excludes the UTR and introns.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ensemble&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Ensemble&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ENST: transcipt&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ENSG: gene &lt;em&gt;(One gene can have many corresponding transcripts.)&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ENSP: protein&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;types-of-files&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Types of Files&lt;/h1&gt;
&lt;div id=&#34;fasta&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;FASTA&lt;/h2&gt;
&lt;p&gt;FASTA is a type of text-based file that is used to store a nucleotide or amino acid sequence. In R, there is the read.fasta() function from the ‘seqinr’ package. It’s written in the following format:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;gt;3LWB:A|PDBID|CHAIN|SEQUENCE
MSANDRRDRRVRVAVVFGGRSNEHAISCVSAGSILRNLDSRRFDVIAVGITPAGSWVLTDANPDALTITNRELPQVKSGS
GTELALPADPRRGGQLVSLPPGAGEVLESVDVVFPVLHGPYGEDGTIQGLLELAGVPYVGAGVLASAVGMDKEFTKKLLA
ADGLPVGAYAVLRPPRSTLHRQECERLGLPVFVKPARGGSSIGVSRVSSWDQLPAAVARARRHDPKVIVEAAISGRELEC
GVLEMPDGTLEASTLGEIRVAGVRGREDSFYDFATKYLDDAAELDVPAKVDDQVAEAIRQLAIRAFAAIDCRGLARVDFF
LTDDGPVINEINTMPGFTTISMYPRMWAASGVDYPTLLATMIETTLARGVGLH
&amp;gt;3LWB:B|PDBID|CHAIN|SEQUENCE
MSANDRRDRRVRVAVVFGGRSNEHAISCVSAGSILRNLDSRRFDVIAVGITPAGSWVLTDANPDALTITNRELPQVKSGS
GTELALPADPRRGGQLVSLPPGAGEVLESVDVVFPVLHGPYGEDGTIQGLLELAGVPYVGAGVLASAVGMDKEFTKKLLA
ADGLPVGAYAVLRPPRSTLHRQECERLGLPVFVKPARGGSSIGVSRVSSWDQLPAAVARARRHDPKVIVEAAISGRELEC
GVLEMPDGTLEASTLGEIRVAGVRGREDSFYDFATKYLDDAAELDVPAKVDDQVAEAIRQLAIRAFAAIDCRGLARVDFF
LTDDGPVINEINTMPGFTTISMYPRMWAASGVDYPTLLATMIETTLARGVGLH&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The first line is used to describe the folowing sequence and it is indicated by the “&amp;gt;” sign. As you can see above, multiple sequences can be found in one FASTA file.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;fastq&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Fastq&lt;/h2&gt;
&lt;p&gt;Similar to FASTA, except from DNA sequencing (commonly for illumina). It also includes the PHRED score which is a measure of the quality of the reading for each base. It is denoted by a single ASCII character.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;@ SequenceID&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;CATGGGCAGCCGAGAGATTGCGA&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;+&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;K&amp;lt;=gux;YZ[bcs3^_`a;&amp;lt;|}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The first line contains the description like fasta but is indicated by the “@” sign instead. After which, the nucleotide sequence is shown on the 2nd line. The third line starts with a “+” sign. Finally, the 4th line contains the quality scores.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;sambam-files&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;SAM/BAM files&lt;/h2&gt;
&lt;p&gt;SAM and BAM files contain the same information, the difference is that BAM files are &lt;strong&gt;binary&lt;/strong&gt; versions of a SAM file. SAM stands for “Sequence Alignment/Map” and contain information about sequences aligned to a reference sequence, and is generated by next generation sequencing.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;vcf&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;VCF&lt;/h2&gt;
&lt;p&gt;VCF stands for variant call format and stores different variants of a gene.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;basic-programming-cheatsheet&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Basic Programming CheatSheet&lt;/h1&gt;
&lt;div id=&#34;unixlinux-bash&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Unix/Linux (Bash)&lt;/h2&gt;
&lt;p&gt;Another way of navigating through files and giving commands to the operating system.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Absolute&lt;/strong&gt; path (begins with “/”)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;/home/Downloads/pax9.csv&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Relative&lt;/strong&gt; path (does NOT begin with “/”)&lt;/p&gt;
&lt;p&gt;If you are in /home&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Downloads&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Downloads/pax9.csv&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you are in /home/Downloads&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;pax9.csv&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col width=&#34;31%&#34; /&gt;
&lt;col width=&#34;68%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;pwd&lt;/td&gt;
&lt;td&gt;“print working directory” (absolute)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;root directory&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;ls&lt;/td&gt;
&lt;td&gt;“listing”, gives contents of current directory&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;strong&gt;ls&lt;/strong&gt; /home/Downloads&lt;/td&gt;
&lt;td&gt;contents of download directory&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;cd&lt;/td&gt;
&lt;td&gt;“change directory”&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;..&lt;/td&gt;
&lt;td&gt;directory above current&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;.&lt;/td&gt;
&lt;td&gt;current directory&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;~&lt;/td&gt;
&lt;td&gt;home directory&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;q&lt;/td&gt;
&lt;td&gt;“quit”&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Control + C&lt;/td&gt;
&lt;td&gt;“cancel”&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;top&lt;/td&gt;
&lt;td&gt;allows you to view the current processes running&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;strong&gt;cp&lt;/strong&gt; test.csv test2.csv&lt;/td&gt;
&lt;td&gt;“copy”: test.csv is duplicated and named test2.csv (last arg = destination)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;strong&gt;cp&lt;/strong&gt; test.csv other.csv Downloads&lt;/td&gt;
&lt;td&gt;“copy”: test.csv and other.csv is copied to the Downloads directory&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;strong&gt;mv&lt;/strong&gt; test.csv other.csv Downloads&lt;/td&gt;
&lt;td&gt;“moves”: test.csv and other.csv is moved to the downloads directory&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;strong&gt;mv&lt;/strong&gt; test.csv new.csv&lt;/td&gt;
&lt;td&gt;“renames”: test.csv is renamed to new.csv (also works for directory)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;strong&gt;rm&lt;/strong&gt; test.csv other.csv&lt;/td&gt;
&lt;td&gt;“removes”: deletes other.csv and test.csv (does not work for directory)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;strong&gt;rmdir&lt;/strong&gt; Downloads&lt;/td&gt;
&lt;td&gt;“removes”: directory (must be empty!)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;strong&gt;mkdir&lt;/strong&gt; Homework&lt;/td&gt;
&lt;td&gt;“makes directory” called homework&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;strong&gt;man&lt;/strong&gt; ls&lt;/td&gt;
&lt;td&gt;“manual” of command ls&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;strong&gt;chmod&lt;/strong&gt; u+x test.sh&lt;/td&gt;
&lt;td&gt;“change file mode”: permissions, read ( r ), write ( w ) or execute ( x )&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Useful Tricks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Hit up and down arrow keys to get previous commands&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use tab key for autocompletion&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Spaces for file names can cause problems because they are seen as separate items. To prevent this, put them in quotes or use  before the space&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;if a file/destination does not exist, it will create one. If it does exist, it may overwrite&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;there is no &lt;strong&gt;undo&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;need-to-kill-a-process&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Need to kill a process?&lt;/h3&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Get PID (process ID) from top&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;type: kill PID&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;doesn’t work? type: kill -9 PID&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;bash-script&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Bash Script&lt;/h3&gt;
&lt;p&gt;A text file with commands. Anything you put in command line can be in a script and vice versa. Uses the &lt;strong&gt;.sh&lt;/strong&gt; extension.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;#!/bin/bash&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;First line must always look something like this. “#!” is called a &lt;strong&gt;shebang&lt;/strong&gt; and immediately after (no spaces), put the path to the interpreter. If you don’t know, type: “which bash” in command line.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;#running program from its path&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;#Bob 07/01/2020&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Comments to describe what it does, author, date, etc.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;name = “Bob”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can set variables&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;echo Hello $name !&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Like print, it will print stuff after it. Refer to variables with a “$” in front.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;pwd&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can put commands in the script.&lt;/p&gt;
&lt;p&gt;In the actual command line, to &lt;strong&gt;run&lt;/strong&gt; the script:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;./testscript.sh&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;AKA, look in the current directory to find the script named testscript.sh and run it.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;r-vs-python&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;R vs Python&lt;/h2&gt;
&lt;p&gt;While R has a lot of super useful packages, especially for bioinformatics and statistics, I found it &lt;strong&gt;super&lt;/strong&gt; annoying to code in base R compared to python. Here are some essential equivalents for R:&lt;/p&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col width=&#34;30%&#34; /&gt;
&lt;col width=&#34;69%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Python&lt;/th&gt;
&lt;th&gt;R&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;len(myList)&lt;/td&gt;
&lt;td&gt;length(myList) **won’t work for strings (see below example)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;x in myList&lt;/td&gt;
&lt;td&gt;x %in% myList&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;myList.index(item)&lt;/td&gt;
&lt;td&gt;match (item, myList)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;“string”[:3]&lt;/td&gt;
&lt;td&gt;substr (“string”, 1, 3)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;range(0, 6,2)&lt;/td&gt;
&lt;td&gt;seq(from = 0, 4, by=2)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;“str”+“ing”&lt;/td&gt;
&lt;td&gt;paste0(“str”,“ing”, &amp;quot;&amp;quot;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;myList=[1,2]&lt;/td&gt;
&lt;td&gt;myList=c(1,2)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;myList.append(3)&lt;/td&gt;
&lt;td&gt;myList=c(myList, 3)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;myList.extend(myList2)&lt;/td&gt;
&lt;td&gt;myList=c(myList,myList2) &lt;strong&gt;OR&lt;/strong&gt; myList=append(myList, myList2)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;strong&gt;python&lt;/strong&gt;: len(“string”) vs &lt;strong&gt;R&lt;/strong&gt;: nchar(“string”)&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;for i in range(len(&amp;quot;test&amp;quot;)): 
  print (i)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 0
## 1
## 2
## 3&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;for (i in 1:nchar(&amp;quot;test&amp;quot;)){
  print (i)
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1
## [1] 2
## [1] 3
## [1] 4&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Matrices&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;python&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test_matrix=[]
for i in range(3): 
  test_matrix.append([0]*3)
test_matrix[0][1]=2
print(test_matrix)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [[0, 2, 0], [0, 0, 0], [0, 0, 0]]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;R&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;test_matrix&amp;lt;- matrix(0, nrow = 3, ncol = 3)
test_matrix[1,2]=2
print(test_matrix)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      [,1] [,2] [,3]
## [1,]    0    2    0
## [2,]    0    0    0
## [3,]    0    0    0&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;micellaneous&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Micellaneous&lt;/h1&gt;
&lt;div id=&#34;k-mers&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;K-mers&lt;/h2&gt;
&lt;p&gt;Subsequences of length k of a nucleotide sequence.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;def findkmers(k, seq):
    dict1={}
    a = 0 
    b= k
    k_mer= seq[a:b]
    while len(k_mer)==k: 
        if k_mer in dict1: 
            dict1[k_mer]+= 1
        else: 
            dict1[k_mer]= 1
        a+=1
        b+=1
        k_mer= seq[a:b]
    print (dict1)

def main():
   my_seq1 = &amp;quot;CAGCCCAATC&amp;quot;
   print(&amp;quot;For the sequence: &amp;quot;, my_seq1)
   for i in range (1,5):
      print(&amp;quot;The&amp;quot;, str(i)+&amp;quot;-mers are :&amp;quot;)
      findkmers(i, my_seq1)

main()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## For the sequence:  CAGCCCAATC
## The 1-mers are :
## {&amp;#39;C&amp;#39;: 5, &amp;#39;A&amp;#39;: 3, &amp;#39;G&amp;#39;: 1, &amp;#39;T&amp;#39;: 1}
## The 2-mers are :
## {&amp;#39;CA&amp;#39;: 2, &amp;#39;AG&amp;#39;: 1, &amp;#39;GC&amp;#39;: 1, &amp;#39;CC&amp;#39;: 2, &amp;#39;AA&amp;#39;: 1, &amp;#39;AT&amp;#39;: 1, &amp;#39;TC&amp;#39;: 1}
## The 3-mers are :
## {&amp;#39;CAG&amp;#39;: 1, &amp;#39;AGC&amp;#39;: 1, &amp;#39;GCC&amp;#39;: 1, &amp;#39;CCC&amp;#39;: 1, &amp;#39;CCA&amp;#39;: 1, &amp;#39;CAA&amp;#39;: 1, &amp;#39;AAT&amp;#39;: 1, &amp;#39;ATC&amp;#39;: 1}
## The 4-mers are :
## {&amp;#39;CAGC&amp;#39;: 1, &amp;#39;AGCC&amp;#39;: 1, &amp;#39;GCCC&amp;#39;: 1, &amp;#39;CCCA&amp;#39;: 1, &amp;#39;CCAA&amp;#39;: 1, &amp;#39;CAAT&amp;#39;: 1, &amp;#39;AATC&amp;#39;: 1}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;blast&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;BLAST&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://blast.ncbi.nlm.nih.gov/Blast.cgi&#34;&gt;BLAST&lt;/a&gt; stands for Basic Local Alignment Search Tool. It finds areas of similarity between sequences of nucleotides or amino acids. There are many types of blast including blastn, blastp, blastx, tblastn, etc.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Query cover: how much of the query sequence actually overlapps with the aligned sequence.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;E value (expected value): smaller is better (significant). It basically means how many hits would you get just randomly (based on the quality of score and the length of the query)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Percent Identity: percentage of characters matching in the query and aligned sequence&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;needleman-wunsch-algorithm&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Needleman-Wunsch algorithm&lt;/h2&gt;
&lt;p&gt;Global alignment&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;smith-waterman-algorithm&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Smith-Waterman algorithm&lt;/h2&gt;
&lt;p&gt;Local alignment&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;blosum-and-pam&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;BLOSUM and PAM&lt;/h2&gt;
&lt;p&gt;Both used as a measure of similarity between proteins. PAM is for closely related while BLOSUM is for distantly related. For BLOSUM, BLOSUM45 would be used for proteins more distant from each other than BLOSUM90.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;other&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Other&lt;/h2&gt;
&lt;p&gt;For more acronyms, I found this &lt;a href=&#34;http://www.nslc.wustl.edu/courses/archives/Bio3050/Glossary.pdf&#34;&gt;glossary&lt;/a&gt; online that has a lot of the basics.&lt;/p&gt;
&lt;p&gt;References&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://useast.ensembl.org/info/website/tutorials/grch37.html&#34; class=&#34;uri&#34;&gt;http://useast.ensembl.org/info/website/tutorials/grch37.html&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://bitesizebio.com/38335/get-to-know-your-reference-genome-grch37-vs-grch38/&#34; class=&#34;uri&#34;&gt;https://bitesizebio.com/38335/get-to-know-your-reference-genome-grch37-vs-grch38/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.ncbi.nlm.nih.gov/books/NBK50679/#RefSeqFAQ.what_is_a_reference_sequence_r&#34; class=&#34;uri&#34;&gt;https://www.ncbi.nlm.nih.gov/books/NBK50679/#RefSeqFAQ.what_is_a_reference_sequence_r&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://thesequencingcenter.com/knowledge-base/fastq-files/&#34; class=&#34;uri&#34;&gt;https://thesequencingcenter.com/knowledge-base/fastq-files/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Kerfeld and Scott, PLoS Biology 2011&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://ryanstutorials.net/linuxtutorial/&#34; class=&#34;uri&#34;&gt;https://ryanstutorials.net/linuxtutorial/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://ryanstutorials.net/bash-scripting-tutorial/bash-script.php&#34; class=&#34;uri&#34;&gt;https://ryanstutorials.net/bash-scripting-tutorial/bash-script.php&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://learn.datacamp.com/&#34; class=&#34;uri&#34;&gt;https://learn.datacamp.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
