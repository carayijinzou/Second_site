"0","library(randomForest)"
"2","randomForest 4.6-14
"
"2","Type rfNews() to see new features/changes/bug fixes.
"
"2","
Attaching package: ‘randomForest’

"
"2","The following object is masked from ‘package:dplyr’:

    combine

"
"2","The following object is masked from ‘package:ggplot2’:

    margin

"
"0","set.seed(40)"
"0","options(expressions = 5e5)"
"0","#pos/neg control"
"0","neg_control = rbind(clinvar2, cancer2) #112 pathogenic variants"
"0","pos_control_index = sample(nrow(gnomAD2), size = nrow(neg_control), replace = FALSE)"
"0","pos_control = gnomAD2[pos_control_index,]"
"0","# take a fifth of each data set for testing data"
"0","neg_control_index = sample(nrow(neg_control), size = round(nrow(neg_control)*0.2), replace = FALSE)"
"0","pos_control_index1 = sample(nrow(pos_control), size = round(nrow(pos_control)*0.2), replace = FALSE)"
"0","neg_testing_data = neg_control[neg_control_index,]"
"0","neg_training_data = neg_control[-neg_control_index,]"
"0"," "
"0","pos_testing_data = pos_control[pos_control_index1,]"
"0","pos_training_data = pos_control[-pos_control_index1,]"
"0","# 10-fold cross validation"
"0"," "
"0","training_data = rbind(pos_training_data, neg_training_data)"
"0","training_data = training_data[sample(nrow(training_data), size = nrow(training_data), replace = FALSE),]"
"0","nrow(training_data)*0.1 #equals 18"
"1","[1]"
"1"," 18"
"1","
"
"0","ten_fold_accuracy = c()"
"0","for(i in 1:10){"
"0","  Index = (1:18)+(i-1)*18"
"0","  train_data = training_data[-Index, ]"
"0","  testin_data = training_data[Index, ]"
"0","  cross_result = randomForest(phenotype ~., data = train_data, importance = T, ntree = 50,"
"0","                               	na.action = na.exclude)"
"0","  result = predict(cross_result, testin_data)"
"0"," "
"0","  ten_fold_accuracy[i] = sum(result == testin_data$phenotype)/nrow(testin_data)"
"0","}"
"0","#there's an NA result , in the testin_data = training_data[145:162,]"
"0","testin_data = training_data[145:162,]"
"0","train_data = training_data[-(145:162),]"
"0","cross_result = randomForest(phenotype ~., data = train_data, importance = T, ntree = 50,"
"0","                        	na.action = na.exclude)"
"0","result = predict(cross_result, testin_data)"
"0","# result[18] = NA, so we exclude it from data"
"0","ten_fold_accuracy[9] = sum(result[-18] == testin_data[-18]$phenotype)/nrow(testin_data[-18])"
"2","longer object length is not a multiple of shorter object length"
"2","longer object length is not a multiple of shorter object length"
"0","matrix(ten_fold_accuracy, nrow = 1, dimnames = list('ten_fold_accuracy'))"
"1","                 "
"1","      [,1]"
"1","      [,2]"
"1","      [,3]"
"1"," [,4]"
"1","      [,5]"
"1","      [,6]"
"1","
ten_fold_accuracy"
"1"," 0.9444444"
"1"," 0.8888889"
"1"," 0.6666667"
"1","    1"
"1"," 0.7777778"
"1"," 0.8888889"
"1","
"
"1","                 "
"1","      [,7]"
"1","      [,8]"
"1","      [,9]"
"1","     [,10]"
"1","
ten_fold_accuracy"
"1"," 0.9444444"
"1"," 0.7222222"
"1"," 0.9444444"
"1"," 0.8888889"
"1","
"
"0","mean(ten_fold_accuracy)"
"1","[1]"
"1"," 0.8666667"
"1","
"
